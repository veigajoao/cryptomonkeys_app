{
    "contractName": "BananaCoin",
    "abi": [
        {
            "inputs": [],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Approval",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Transfer",
            "type": "event"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                }
            ],
            "name": "allowance",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "approve",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "balanceOf",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "burn",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "burnFrom",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "decimals",
            "outputs": [
                {
                    "internalType": "uint8",
                    "name": "",
                    "type": "uint8"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "subtractedValue",
                    "type": "uint256"
                }
            ],
            "name": "decreaseAllowance",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "addedValue",
                    "type": "uint256"
                }
            ],
            "name": "increaseAllowance",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "name",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "symbol",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "transfer",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "transferFrom",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"c:/Users/Joao/Documents/cryptomonkeysgame/crypto_game_boilerplate/contracts/token_creation/BananaCoin.sol\":\"BananaCoin\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"c:/Users/Joao/Documents/cryptomonkeysgame/crypto_game_boilerplate/contracts/token_creation/BananaCoin.sol\":{\"keccak256\":\"0x1c5aed945a130b447da1355af27cbb3cd50b5977c61dbdacf3937f78650f28b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3112dd6d9c635477e02bbb87fdba3c89884a9804a0be910113453282da103bd8\",\"dweb:/ipfs/QmUXg5evPWCWoq5xRegVE5YKVXDxLprcA9z6SXLVyDFQBD\"]},\"c:/Users/Joao/Documents/cryptomonkeysgame/crypto_game_boilerplate/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xdadd41acb749920eccf40aeaa8d291adf9751399a7343561bad13e7a8d99be0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12af4ac016f9fdf3be5d15824f4292272aa11f6b2e0192a0f7320f5ad49bbbf0\",\"dweb:/ipfs/QmRXMpdqCgA3TYuYxBodqs5p9jGbnMW6xa2gvjppvq4TWk\"]},\"c:/Users/Joao/Documents/cryptomonkeysgame/crypto_game_boilerplate/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"c:/Users/Joao/Documents/cryptomonkeysgame/crypto_game_boilerplate/node_modules/@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f\",\"dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe\"]},\"c:/Users/Joao/Documents/cryptomonkeysgame/crypto_game_boilerplate/node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"c:/Users/Joao/Documents/cryptomonkeysgame/crypto_game_boilerplate/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
    "bytecode": "60806040523480156200001157600080fd5b50604080518082018252600981526842697442616e616e6160b81b602080830191825283518085019094526005845264424e414e4160d81b908401528151919291620000609160039162000184565b5080516200007690600490602084019062000184565b50505062000096336a52b7d2dcc80cd2e40000006200009c60201b60201c565b6200028e565b6001600160a01b038216620000f75760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b80600260008282546200010b91906200022a565b90915550506001600160a01b038216600090815260208190526040812080548392906200013a9084906200022a565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b828054620001929062000251565b90600052602060002090601f016020900481019282620001b6576000855562000201565b82601f10620001d157805160ff191683800117855562000201565b8280016001018555821562000201579182015b8281111562000201578251825591602001919060010190620001e4565b506200020f92915062000213565b5090565b5b808211156200020f576000815560010162000214565b600082198211156200024c57634e487b7160e01b600052601160045260246000fd5b500190565b600181811c908216806200026657607f821691505b602082108114156200028857634e487b7160e01b600052602260045260246000fd5b50919050565b610ac1806200029e6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806342966c681161008c57806395d89b411161006657806395d89b41146101ad578063a457c2d7146101b5578063a9059cbb146101c8578063dd62ed3e146101db57600080fd5b806342966c681461015c57806370a082311461017157806379cc67901461019a57600080fd5b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461011557806323b872dd14610127578063313ce5671461013a5780633950935114610149575b600080fd5b6100dc610214565b6040516100e991906108c6565b60405180910390f35b610105610100366004610937565b6102a6565b60405190151581526020016100e9565b6002545b6040519081526020016100e9565b610105610135366004610961565b6102be565b604051601281526020016100e9565b610105610157366004610937565b6102e2565b61016f61016a36600461099d565b610321565b005b61011961017f3660046109b6565b6001600160a01b031660009081526020819052604090205490565b61016f6101a8366004610937565b61032e565b6100dc610347565b6101056101c3366004610937565b610356565b6101056101d6366004610937565b6103ed565b6101196101e93660046109d8565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60606003805461022390610a0b565b80601f016020809104026020016040519081016040528092919081815260200182805461024f90610a0b565b801561029c5780601f106102715761010080835404028352916020019161029c565b820191906000526020600020905b81548152906001019060200180831161027f57829003601f168201915b5050505050905090565b6000336102b48185856103fb565b5060019392505050565b6000336102cc858285610520565b6102d78585856105b2565b506001949350505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091906102b4908290869061031c908790610a5c565b6103fb565b61032b3382610780565b50565b610339823383610520565b6103438282610780565b5050565b60606004805461022390610a0b565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156103e05760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102d782868684036103fb565b6000336102b48185856105b2565b6001600160a01b03831661045d5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103d7565b6001600160a01b0382166104be5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103d7565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383811660009081526001602090815260408083209386168352929052205460001981146105ac578181101561059f5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103d7565b6105ac84848484036103fb565b50505050565b6001600160a01b0383166106165760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103d7565b6001600160a01b0382166106785760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103d7565b6001600160a01b038316600090815260208190526040902054818110156106f05760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103d7565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610727908490610a5c565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161077391815260200190565b60405180910390a36105ac565b6001600160a01b0382166107e05760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103d7565b6001600160a01b038216600090815260208190526040902054818110156108545760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103d7565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610883908490610a74565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610513565b600060208083528351808285015260005b818110156108f3578581018301518582016040015282016108d7565b81811115610905576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461093257600080fd5b919050565b6000806040838503121561094a57600080fd5b6109538361091b565b946020939093013593505050565b60008060006060848603121561097657600080fd5b61097f8461091b565b925061098d6020850161091b565b9150604084013590509250925092565b6000602082840312156109af57600080fd5b5035919050565b6000602082840312156109c857600080fd5b6109d18261091b565b9392505050565b600080604083850312156109eb57600080fd5b6109f48361091b565b9150610a026020840161091b565b90509250929050565b600181811c90821680610a1f57607f821691505b60208210811415610a4057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610a6f57610a6f610a46565b500190565b600082821015610a8657610a86610a46565b50039056fea26469706673582212200c1aa158ca576551b25736be1b1528e3573acbd18b0edc88b51545b422a24ad164736f6c634300080b0033",
    "deployedBytecode": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c806342966c681161008c57806395d89b411161006657806395d89b41146101ad578063a457c2d7146101b5578063a9059cbb146101c8578063dd62ed3e146101db57600080fd5b806342966c681461015c57806370a082311461017157806379cc67901461019a57600080fd5b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461011557806323b872dd14610127578063313ce5671461013a5780633950935114610149575b600080fd5b6100dc610214565b6040516100e991906108c6565b60405180910390f35b610105610100366004610937565b6102a6565b60405190151581526020016100e9565b6002545b6040519081526020016100e9565b610105610135366004610961565b6102be565b604051601281526020016100e9565b610105610157366004610937565b6102e2565b61016f61016a36600461099d565b610321565b005b61011961017f3660046109b6565b6001600160a01b031660009081526020819052604090205490565b61016f6101a8366004610937565b61032e565b6100dc610347565b6101056101c3366004610937565b610356565b6101056101d6366004610937565b6103ed565b6101196101e93660046109d8565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60606003805461022390610a0b565b80601f016020809104026020016040519081016040528092919081815260200182805461024f90610a0b565b801561029c5780601f106102715761010080835404028352916020019161029c565b820191906000526020600020905b81548152906001019060200180831161027f57829003601f168201915b5050505050905090565b6000336102b48185856103fb565b5060019392505050565b6000336102cc858285610520565b6102d78585856105b2565b506001949350505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091906102b4908290869061031c908790610a5c565b6103fb565b61032b3382610780565b50565b610339823383610520565b6103438282610780565b5050565b60606004805461022390610a0b565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156103e05760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102d782868684036103fb565b6000336102b48185856105b2565b6001600160a01b03831661045d5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103d7565b6001600160a01b0382166104be5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103d7565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383811660009081526001602090815260408083209386168352929052205460001981146105ac578181101561059f5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103d7565b6105ac84848484036103fb565b50505050565b6001600160a01b0383166106165760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103d7565b6001600160a01b0382166106785760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103d7565b6001600160a01b038316600090815260208190526040902054818110156106f05760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103d7565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610727908490610a5c565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161077391815260200190565b60405180910390a36105ac565b6001600160a01b0382166107e05760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103d7565b6001600160a01b038216600090815260208190526040902054818110156108545760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103d7565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610883908490610a74565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610513565b600060208083528351808285015260005b818110156108f3578581018301518582016040015282016108d7565b81811115610905576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461093257600080fd5b919050565b6000806040838503121561094a57600080fd5b6109538361091b565b946020939093013593505050565b60008060006060848603121561097657600080fd5b61097f8461091b565b925061098d6020850161091b565b9150604084013590509250925092565b6000602082840312156109af57600080fd5b5035919050565b6000602082840312156109c857600080fd5b6109d18261091b565b9392505050565b600080604083850312156109eb57600080fd5b6109f48361091b565b9150610a026020840161091b565b90509250929050565b600181811c90821680610a1f57607f821691505b60208210811415610a4057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610a6f57610a6f610a46565b500190565b600082821015610a8657610a86610a46565b50039056fea26469706673582212200c1aa158ca576551b25736be1b1528e3573acbd18b0edc88b51545b422a24ad164736f6c634300080b0033",
    "sourceMap": "217:151:0:-:0;;;263:100;;;;;;;;;-1:-1:-1;1978:113:1;;;;;;;;;;;-1:-1:-1;;;1978:113:1;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1978:113:1;;;;2044:13;;1978:113;;;2044:13;;:5;;:13;:::i;:::-;-1:-1:-1;2067:17:1;;;;:7;;:17;;;;;:::i;:::-;;1978:113;;316:39:0::1;322:10;334:20;316:5;;;:39;;:::i;:::-;217:151:::0;;8415:389:1;-1:-1:-1;;;;;8498:21:1;;8490:65;;;;-1:-1:-1;;;8490:65:1;;216:2:6;8490:65:1;;;198:21:6;255:2;235:18;;;228:30;294:33;274:18;;;267:61;345:18;;8490:65:1;;;;;;;;8642:6;8626:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8658:18:1;;:9;:18;;;;;;;;;;:28;;8680:6;;8658:9;:28;;8680:6;;8658:28;:::i;:::-;;;;-1:-1:-1;;8701:37:1;;750:25:6;;;-1:-1:-1;;;;;8701:37:1;;;8718:1;;8701:37;;738:2:6;723:18;8701:37:1;;;;;;;8415:389;;:::o;217:151:0:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;217:151:0;;;-1:-1:-1;217:151:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;374:225:6;414:3;445:1;441:6;438:1;435:13;432:136;;;490:10;485:3;481:20;478:1;471:31;525:4;522:1;515:15;553:4;550:1;543:15;432:136;-1:-1:-1;584:9:6;;374:225::o;786:380::-;865:1;861:12;;;;908;;;929:61;;983:4;975:6;971:17;961:27;;929:61;1036:2;1028:6;1025:14;1005:18;1002:38;999:161;;;1082:10;1077:3;1073:20;1070:1;1063:31;1117:4;1114:1;1107:15;1145:4;1142:1;1135:15;999:161;;786:380;;;:::o;:::-;217:151:0;;;;;;",
    "deployedSourceMap": "217:151:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4433:197;;;;;;:::i;:::-;;:::i;:::-;;;1218:14:6;;1211:22;1193:41;;1181:2;1166:18;4433:197:1;1053:187:6;3244:106:1;3331:12;;3244:106;;;1391:25:6;;;1379:2;1364:18;3244:106:1;1245:177:6;5192:286:1;;;;;;:::i;:::-;;:::i;3093:91::-;;;3175:2;1902:36:6;;1890:2;1875:18;3093:91:1;1760:184:6;5873:236:1;;;;;;:::i;:::-;;:::i;578:89:3:-;;;;;;:::i;:::-;;:::i;:::-;;3408:125:1;;;;;;:::i;:::-;-1:-1:-1;;;;;3508:18:1;3482:7;3508:18;;;;;;;;;;;;3408:125;973:161:3;;;;;;:::i;:::-;;:::i;2367:102:1:-;;;:::i;6596:429::-;;;;;;:::i;:::-;;:::i;3729:189::-;;;;;;:::i;:::-;;:::i;3976:149::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4091:18:1;;;4065:7;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3976:149;2156:98;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;719:10:5;4570:32:1;719:10:5;4586:7:1;4595:6;4570:8;:32::i;:::-;-1:-1:-1;4619:4:1;;4433:197;-1:-1:-1;;;4433:197:1:o;5192:286::-;5319:4;719:10:5;5375:38:1;5391:4;719:10:5;5406:6:1;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;:::-;-1:-1:-1;5467:4:1;;5192:286;-1:-1:-1;;;;5192:286:1:o;5873:236::-;719:10:5;5961:4:1;6040:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;6040:27:1;;;;;;;;;;5961:4;;719:10:5;6015:66:1;;719:10:5;;6040:27:1;;:40;;6070:10;;6040:40;:::i;:::-;6015:8;:66::i;578:89:3:-;633:27;719:10:5;653:6:3;633:5;:27::i;:::-;578:89;:::o;973:161::-;1049:46;1065:7;719:10:5;1088:6:3;1049:15;:46::i;:::-;1105:22;1111:7;1120:6;1105:5;:22::i;:::-;973:161;;:::o;2367:102:1:-;2423:13;2455:7;2448:14;;;;;:::i;6596:429::-;719:10:5;6689:4:1;6770:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;6770:27:1;;;;;;;;;;6689:4;;719:10:5;6815:35:1;;;;6807:85;;;;-1:-1:-1;;;6807:85:1;;3442:2:6;6807:85:1;;;3424:21:6;3481:2;3461:18;;;3454:30;3520:34;3500:18;;;3493:62;-1:-1:-1;;;3571:18:6;;;3564:35;3616:19;;6807:85:1;;;;;;;;;6926:60;6935:5;6942:7;6970:15;6951:16;:34;6926:8;:60::i;3729:189::-;3808:4;719:10:5;3862:28:1;719:10:5;3879:2:1;3883:6;3862:9;:28::i;10123:370::-;-1:-1:-1;;;;;10254:19:1;;10246:68;;;;-1:-1:-1;;;10246:68:1;;3848:2:6;10246:68:1;;;3830:21:6;3887:2;3867:18;;;3860:30;3926:34;3906:18;;;3899:62;-1:-1:-1;;;3977:18:6;;;3970:34;4021:19;;10246:68:1;3646:400:6;10246:68:1;-1:-1:-1;;;;;10332:21:1;;10324:68;;;;-1:-1:-1;;;10324:68:1;;4253:2:6;10324:68:1;;;4235:21:6;4292:2;4272:18;;;4265:30;4331:34;4311:18;;;4304:62;-1:-1:-1;;;4382:18:6;;;4375:32;4424:19;;10324:68:1;4051:398:6;10324:68:1;-1:-1:-1;;;;;10403:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10454:32;;1391:25:6;;;10454:32:1;;1364:18:6;10454:32:1;;;;;;;;10123:370;;;:::o;10770:441::-;-1:-1:-1;;;;;4091:18:1;;;10900:24;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10966:37:1;;10962:243;;11047:6;11027:16;:26;;11019:68;;;;-1:-1:-1;;;11019:68:1;;4656:2:6;11019:68:1;;;4638:21:6;4695:2;4675:18;;;4668:30;4734:31;4714:18;;;4707:59;4783:18;;11019:68:1;4454:353:6;11019:68:1;11129:51;11138:5;11145:7;11173:6;11154:16;:25;11129:8;:51::i;:::-;10890:321;10770:441;;;:::o;7488:651::-;-1:-1:-1;;;;;7614:18:1;;7606:68;;;;-1:-1:-1;;;7606:68:1;;5014:2:6;7606:68:1;;;4996:21:6;5053:2;5033:18;;;5026:30;5092:34;5072:18;;;5065:62;-1:-1:-1;;;5143:18:6;;;5136:35;5188:19;;7606:68:1;4812:401:6;7606:68:1;-1:-1:-1;;;;;7692:16:1;;7684:64;;;;-1:-1:-1;;;7684:64:1;;5420:2:6;7684:64:1;;;5402:21:6;5459:2;5439:18;;;5432:30;5498:34;5478:18;;;5471:62;-1:-1:-1;;;5549:18:6;;;5542:33;5592:19;;7684:64:1;5218:399:6;7684:64:1;-1:-1:-1;;;;;7830:15:1;;7808:19;7830:15;;;;;;;;;;;7863:21;;;;7855:72;;;;-1:-1:-1;;;7855:72:1;;5824:2:6;7855:72:1;;;5806:21:6;5863:2;5843:18;;;5836:30;5902:34;5882:18;;;5875:62;-1:-1:-1;;;5953:18:6;;;5946:36;5999:19;;7855:72:1;5622:402:6;7855:72:1;-1:-1:-1;;;;;7961:15:1;;;:9;:15;;;;;;;;;;;7979:20;;;7961:38;;8019:13;;;;;;;;:23;;7993:6;;7961:9;8019:23;;7993:6;;8019:23;:::i;:::-;;;;;;;;8073:2;-1:-1:-1;;;;;8058:26:1;8067:4;-1:-1:-1;;;;;8058:26:1;;8077:6;8058:26;;;;1391:25:6;;1379:2;1364:18;;1245:177;8058:26:1;;;;;;;;8095:37;9124:576;;-1:-1:-1;;;;;9207:21:1;;9199:67;;;;-1:-1:-1;;;9199:67:1;;6231:2:6;9199:67:1;;;6213:21:6;6270:2;6250:18;;;6243:30;6309:34;6289:18;;;6282:62;-1:-1:-1;;;6360:18:6;;;6353:31;6401:19;;9199:67:1;6029:397:6;9199:67:1;-1:-1:-1;;;;;9362:18:1;;9337:22;9362:18;;;;;;;;;;;9398:24;;;;9390:71;;;;-1:-1:-1;;;9390:71:1;;6633:2:6;9390:71:1;;;6615:21:6;6672:2;6652:18;;;6645:30;6711:34;6691:18;;;6684:62;-1:-1:-1;;;6762:18:6;;;6755:32;6804:19;;9390:71:1;6431:398:6;9390:71:1;-1:-1:-1;;;;;9495:18:1;;:9;:18;;;;;;;;;;9516:23;;;9495:44;;9559:12;:22;;9533:6;;9495:9;9559:22;;9533:6;;9559:22;:::i;:::-;;;;-1:-1:-1;;9597:37:1;;1391:25:6;;;9623:1:1;;-1:-1:-1;;;;;9597:37:1;;;;;1379:2:6;1364:18;9597:37:1;1245:177:6;14:597;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:6;574:15;-1:-1:-1;;570:29:6;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:6:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:6;;723:42;;713:70;;779:1;776;769:12;713:70;616:173;;;:::o;794:254::-;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:6:o;1427:328::-;1504:6;1512;1520;1573:2;1561:9;1552:7;1548:23;1544:32;1541:52;;;1589:1;1586;1579:12;1541:52;1612:29;1631:9;1612:29;:::i;:::-;1602:39;;1660:38;1694:2;1683:9;1679:18;1660:38;:::i;:::-;1650:48;;1745:2;1734:9;1730:18;1717:32;1707:42;;1427:328;;;;;:::o;1949:180::-;2008:6;2061:2;2049:9;2040:7;2036:23;2032:32;2029:52;;;2077:1;2074;2067:12;2029:52;-1:-1:-1;2100:23:6;;1949:180;-1:-1:-1;1949:180:6:o;2134:186::-;2193:6;2246:2;2234:9;2225:7;2221:23;2217:32;2214:52;;;2262:1;2259;2252:12;2214:52;2285:29;2304:9;2285:29;:::i;:::-;2275:39;2134:186;-1:-1:-1;;;2134:186:6:o;2325:260::-;2393:6;2401;2454:2;2442:9;2433:7;2429:23;2425:32;2422:52;;;2470:1;2467;2460:12;2422:52;2493:29;2512:9;2493:29;:::i;:::-;2483:39;;2541:38;2575:2;2564:9;2560:18;2541:38;:::i;:::-;2531:48;;2325:260;;;;;:::o;2590:380::-;2669:1;2665:12;;;;2712;;;2733:61;;2787:4;2779:6;2775:17;2765:27;;2733:61;2840:2;2832:6;2829:14;2809:18;2806:38;2803:161;;;2886:10;2881:3;2877:20;2874:1;2867:31;2921:4;2918:1;2911:15;2949:4;2946:1;2939:15;2803:161;;2590:380;;;:::o;2975:127::-;3036:10;3031:3;3027:20;3024:1;3017:31;3067:4;3064:1;3057:15;3091:4;3088:1;3081:15;3107:128;3147:3;3178:1;3174:6;3171:1;3168:13;3165:39;;;3184:18;;:::i;:::-;-1:-1:-1;3220:9:6;;3107:128::o;6834:125::-;6874:4;6902:1;6899;6896:8;6893:34;;;6907:18;;:::i;:::-;-1:-1:-1;6944:9:6;;6834:125::o",
    "sourcePath": "c:/Users/Joao/Documents/cryptomonkeysgame/crypto_game_boilerplate/contracts/token_creation/BananaCoin.sol",
    "compiler": {
        "name": "solc",
        "version": "0.8.11+commit.d7f03943"
    },
    "ast": {
        "absolutePath": "c:/Users/Joao/Documents/cryptomonkeysgame/crypto_game_boilerplate/contracts/token_creation/BananaCoin.sol",
        "exportedSymbols": {
            "BananaCoin": [
                27
            ],
            "Context": [
                784
            ],
            "ERC20": [
                615
            ],
            "ERC20Burnable": [
                737
            ],
            "IERC20": [
                693
            ],
            "IERC20Metadata": [
                762
            ]
        },
        "id": 28,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 1,
                "literals": [
                    "solidity",
                    "^",
                    "0.8",
                    ".0"
                ],
                "nodeType": "PragmaDirective",
                "src": "33:23:0"
            },
            {
                "absolutePath": "c:/Users/Joao/Documents/cryptomonkeysgame/crypto_game_boilerplate/node_modules/@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
                "file": "c:/Users/Joao/Documents/cryptomonkeysgame/crypto_game_boilerplate/node_modules/@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
                "id": 2,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 28,
                "sourceUnit": 738,
                "src": "60:153:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 3,
                            "name": "ERC20Burnable",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 737,
                            "src": "240:13:0"
                        },
                        "id": 4,
                        "nodeType": "InheritanceSpecifier",
                        "src": "240:13:0"
                    }
                ],
                "canonicalName": "BananaCoin",
                "contractDependencies": [],
                "contractKind": "contract",
                "fullyImplemented": true,
                "id": 27,
                "linearizedBaseContracts": [
                    27,
                    737,
                    615,
                    762,
                    693,
                    784
                ],
                "name": "BananaCoin",
                "nameLocation": "226:10:0",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "body": {
                            "id": 25,
                            "nodeType": "Block",
                            "src": "305:58:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "expression": {
                                                    "id": 12,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4294967281,
                                                    "src": "322:3:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 13,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "322:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_rational_100000000000000000000000000_by_1",
                                                    "typeString": "int_const 100000000000000000000000000"
                                                },
                                                "id": 22,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "commonType": {
                                                        "typeIdentifier": "t_rational_100000000_by_1",
                                                        "typeString": "int_const 100000000"
                                                    },
                                                    "id": 18,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                        "hexValue": "313030",
                                                        "id": 14,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "number",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "334:3:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_rational_100_by_1",
                                                            "typeString": "int_const 100"
                                                        },
                                                        "value": "100"
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "*",
                                                    "rightExpression": {
                                                        "commonType": {
                                                            "typeIdentifier": "t_rational_1000000_by_1",
                                                            "typeString": "int_const 1000000"
                                                        },
                                                        "id": 17,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "hexValue": "3130",
                                                            "id": 15,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "340:2:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_rational_10_by_1",
                                                                "typeString": "int_const 10"
                                                            },
                                                            "value": "10"
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "**",
                                                        "rightExpression": {
                                                            "hexValue": "36",
                                                            "id": 16,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "344:1:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_rational_6_by_1",
                                                                "typeString": "int_const 6"
                                                            },
                                                            "value": "6"
                                                        },
                                                        "src": "340:5:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_rational_1000000_by_1",
                                                            "typeString": "int_const 1000000"
                                                        }
                                                    },
                                                    "src": "334:11:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_100000000_by_1",
                                                        "typeString": "int_const 100000000"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "*",
                                                "rightExpression": {
                                                    "commonType": {
                                                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                                        "typeString": "int_const 1000000000000000000"
                                                    },
                                                    "id": 21,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                        "hexValue": "3130",
                                                        "id": 19,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "number",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "348:2:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_rational_10_by_1",
                                                            "typeString": "int_const 10"
                                                        },
                                                        "value": "10"
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "**",
                                                    "rightExpression": {
                                                        "hexValue": "3138",
                                                        "id": 20,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "number",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "352:2:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_rational_18_by_1",
                                                            "typeString": "int_const 18"
                                                        },
                                                        "value": "18"
                                                    },
                                                    "src": "348:6:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                                        "typeString": "int_const 1000000000000000000"
                                                    }
                                                },
                                                "src": "334:20:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_100000000000000000000000000_by_1",
                                                    "typeString": "int_const 100000000000000000000000000"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_rational_100000000000000000000000000_by_1",
                                                    "typeString": "int_const 100000000000000000000000000"
                                                }
                                            ],
                                            "id": 11,
                                            "name": "_mint",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 432,
                                            "src": "316:5:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                            }
                                        },
                                        "id": 23,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "316:39:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 24,
                                    "nodeType": "ExpressionStatement",
                                    "src": "316:39:0"
                                }
                            ]
                        },
                        "id": 26,
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [
                            {
                                "arguments": [
                                    {
                                        "hexValue": "42697442616e616e61",
                                        "id": 7,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "283:11:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_3b5189737c8b3aaab5635fdb5c861029256969051aab39f44683eec99e98e498",
                                            "typeString": "literal_string \"BitBanana\""
                                        },
                                        "value": "BitBanana"
                                    },
                                    {
                                        "hexValue": "424e414e41",
                                        "id": 8,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "296:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_5111c044e468f40c85cbf962ded0478e749dec43d9fd1594f9da70c025e9169c",
                                            "typeString": "literal_string \"BNANA\""
                                        },
                                        "value": "BNANA"
                                    }
                                ],
                                "id": 9,
                                "kind": "baseConstructorSpecifier",
                                "modifierName": {
                                    "id": 6,
                                    "name": "ERC20",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 615,
                                    "src": "277:5:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "277:27:0"
                            }
                        ],
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 5,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "274:2:0"
                        },
                        "returnParameters": {
                            "id": 10,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "305:0:0"
                        },
                        "scope": 27,
                        "src": "263:100:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    }
                ],
                "scope": 28,
                "src": "217:151:0",
                "usedErrors": []
            }
        ],
        "src": "33:335:0"
    },
    "functionHashes": {
        "allowance(address,address)": "dd62ed3e",
        "approve(address,uint256)": "095ea7b3",
        "balanceOf(address)": "70a08231",
        "burn(uint256)": "42966c68",
        "burnFrom(address,uint256)": "79cc6790",
        "decimals()": "313ce567",
        "decreaseAllowance(address,uint256)": "a457c2d7",
        "increaseAllowance(address,uint256)": "39509351",
        "name()": "06fdde03",
        "symbol()": "95d89b41",
        "totalSupply()": "18160ddd",
        "transfer(address,uint256)": "a9059cbb",
        "transferFrom(address,address,uint256)": "23b872dd"
    },
    "gasEstimates": {
        "creation": {
            "codeDepositCost": "550600",
            "executionCost": "infinite",
            "totalCost": "infinite"
        },
        "external": {
            "allowance(address,address)": "infinite",
            "approve(address,uint256)": "24625",
            "balanceOf(address)": "2585",
            "burn(uint256)": "50884",
            "burnFrom(address,uint256)": "infinite",
            "decimals()": "266",
            "decreaseAllowance(address,uint256)": "26945",
            "increaseAllowance(address,uint256)": "27057",
            "name()": "infinite",
            "symbol()": "infinite",
            "totalSupply()": "2326",
            "transfer(address,uint256)": "51248",
            "transferFrom(address,address,uint256)": "infinite"
        }
    }
}