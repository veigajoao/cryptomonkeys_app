{"version":3,"file":"static/js/958.0ed58c2a.chunk.js","mappings":"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","sources":["DemoPages/Charts/Sparklines1/Examples/index.js","DemoPages/Charts/Sparklines1/index.js","DemoPages/Charts/Sparklines2/Examples/index.js","DemoPages/Charts/Sparklines2/index.js","DemoPages/Charts/ChartJs/Examples/doughnut.js","DemoPages/Charts/ChartJs/Examples/pie.js","DemoPages/Charts/ChartJs/Examples/dynamicDoughnut.js","DemoPages/Charts/ChartJs/Examples/radar.js","DemoPages/Charts/ChartJs/Examples/polar.js","DemoPages/Charts/ChartJs/Examples/Circular/index.js","DemoPages/Charts/ChartJs/Examples/line.js","DemoPages/Charts/ChartJs/Examples/line2.js","DemoPages/Charts/ChartJs/Examples/bar.js","DemoPages/Charts/ChartJs/Examples/horizontalBar.js","DemoPages/Charts/ChartJs/Examples/mix.js","DemoPages/Charts/ChartJs/Examples/LinesBars/index.js","DemoPages/Charts/ChartJs/index.js","DemoPages/Charts/Gauges/Examples/liquidGauge.js","DemoPages/Charts/Gauges/index.js","DemoPages/Charts/ApexCharts/Examples/Basic/Area.jsx","DemoPages/Charts/ApexCharts/Examples/Basic/Bar.jsx","DemoPages/Charts/ApexCharts/Examples/Basic/Donut.jsx","DemoPages/Charts/ApexCharts/Examples/Basic/RadialBar.jsx","DemoPages/Charts/ApexCharts/Examples/Basic/index.js","DemoPages/Charts/ApexCharts/Examples/Sparklines/Area.jsx","DemoPages/Charts/ApexCharts/Examples/Sparklines/Bar.jsx","DemoPages/Charts/ApexCharts/Examples/Sparklines/Line.jsx","DemoPages/Charts/ApexCharts/Examples/Sparklines/index.js","DemoPages/Charts/ApexCharts/index.js","DemoPages/Charts/index.js"],"sourcesContent":["import React, { Fragment } from \"react\";\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { Row, Col, Card, CardBody, CardTitle } from \"reactstrap\";\n\nimport {\n  Sparklines,\n  SparklinesBars,\n  SparklinesLine,\n  SparklinesCurve,\n  SparklinesReferenceLine,\n  SparklinesSpots,\n} from \"react-sparklines\";\n\nfunction boxMullerRandom() {\n  let phase = true,\n    x1,\n    x2,\n    w;\n\n  return (function() {\n    if (phase) {\n      do {\n        x1 = 2.0 * Math.random() - 1.0;\n        x2 = 2.0 * Math.random() - 1.0;\n        w = x1 * x1 + x2 * x2;\n      } while (w >= 1.0);\n\n      w = Math.sqrt((-2.0 * Math.log(w)) / w);\n      return x1 * w;\n    } else {\n      return x2 * w;\n    }\n  })();\n}\n\nfunction randomData(n = 30) {\n  return Array.apply(0, Array(n)).map(boxMullerRandom);\n}\n\nconst sampleData = randomData(30);\nconst sampleData1 = randomData(39);\nconst sampleData2 = randomData(19);\nconst sampleData3 = randomData(43);\nconst sampleData4 = randomData(13);\nconst sampleData5 = randomData(17);\nconst sampleData6 = randomData(24);\nconst sampleData7 = randomData(35);\nconst sampleData100 = randomData(100);\n\nclass ChartsSparklines1 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { data: [] };\n    setInterval(\n      () =>\n        this.setState({\n          data: this.state.data.concat([boxMullerRandom()]),\n        }),\n      200\n    );\n  }\n  componeDidMount() {\n    clearInterval(this.timeout);\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <TransitionGroup>\n          <CSSTransition component=\"div\" classNames=\"TabsAnimation\" appear={true}\n            timeout={1500} enter={false} exit={false}>\n            <Row>\n              <Col md=\"3\">\n                <Card className=\"main-card mb-3\">\n                  <CardBody>\n                    <CardTitle>Simple</CardTitle>\n                    <Sparklines height={90} data={sampleData}>\n                      <SparklinesLine />\n                    </Sparklines>\n                  </CardBody>\n                </Card>\n                <Card className=\"main-card mb-3\">\n                  <CardBody>\n                    <CardTitle>Simple curved</CardTitle>\n                    <Sparklines height={90} data={sampleData1}>\n                      <SparklinesCurve />\n                    </Sparklines>\n                  </CardBody>\n                </Card>\n                <Card className=\"main-card mb-3\">\n                  <CardBody>\n                    <CardTitle>Dynamic Sparklines</CardTitle>\n                    <div className=\"mb-2\">\n                      <Sparklines data={this.state.data} limit={20}>\n                        <SparklinesLine color=\"#1c8cdc\" />\n                        <SparklinesSpots />\n                      </Sparklines>\n                    </div>\n                    <div className=\"mb-2\">\n                      <Sparklines data={this.state.data} limit={20}>\n                        <SparklinesBars\n                          style={{\n                            fill: \"#41c3f9\",\n                            fillOpacity: \".25\",\n                          }}/>\n                        <SparklinesLine\n                          style={{\n                            stroke: \"#41c3f9\",\n                            fill: \"none\",\n                          }}/>\n                      </Sparklines>\n                    </div>\n                    <div className=\"mb-2\">\n                      <Sparklines data={this.state.data} limit={20}>\n                        <SparklinesLine\n                          style={{\n                            stroke: \"none\",\n                            fill: \"#8e44af\",\n                            fillOpacity: \"1\",\n                          }}/>\n                      </Sparklines>\n                    </div>\n                    <Sparklines data={this.state.data} limit={10}>\n                      <SparklinesBars color=\"#0a83d8\" />\n                    </Sparklines>\n                  </CardBody>\n                </Card>\n              </Col>\n              <Col md=\"6\">\n                <Card className=\"main-card mb-3\">\n                  <CardBody>\n                    <CardTitle>Normal Band</CardTitle>\n                    <Row>\n                      <Col md=\"6\">\n                        <Sparklines height={90} data={sampleData}>\n                          <SparklinesLine\n                            height=\"30\"\n                            style={{\n                              fill: \"none\",\n                            }}/>\n                        </Sparklines>\n                      </Col>\n                      <Col md=\"6\">\n                        <Sparklines height={90} data={sampleData}>\n                          <SparklinesLine\n                            height=\"30\"\n                            style={{\n                              fill: \"none\",\n                            }}/>\n                          <SparklinesReferenceLine height=\"30\" type=\"mean\" />\n                        </Sparklines>\n                      </Col>\n                    </Row>\n                  </CardBody>\n                </Card>\n                <Card className=\"main-card mb-3\">\n                  <CardBody>\n                    <CardTitle>Customizable</CardTitle>\n                    <Row>\n                      <Col md=\"4\">\n                        <div className=\"mb-2\">\n                          <Sparklines height={90} data={sampleData2}>\n                            <SparklinesLine color=\"#1c8cdc\" />\n                          </Sparklines>\n                        </div>\n                        <Sparklines height={90} data={sampleData3}>\n                          <SparklinesLine color=\"#fa7e17\" />\n                        </Sparklines>\n                      </Col>\n                      <Col md=\"4\">\n                        <div className=\"mb-2\">\n                          <Sparklines height={90} data={sampleData4}>\n                            <SparklinesLine color=\"#ea485c\" />\n                          </Sparklines>\n                        </div>\n                        <Sparklines height={90} data={sampleData5}>\n                          <SparklinesLine color=\"#56b45d\" />\n                        </Sparklines>\n                      </Col>\n                      <Col md=\"4\">\n                        <div className=\"mb-2\">\n                          <Sparklines height={90} data={sampleData6}>\n                            <SparklinesLine color=\"#253e56\" />\n                          </Sparklines>\n                        </div>\n                        <Sparklines height={90} data={sampleData7}>\n                          <SparklinesLine color=\"#8e44af\" />\n                        </Sparklines>\n                      </Col>\n                    </Row>\n                  </CardBody>\n                </Card>\n                <Card className=\"main-card mb-3\">\n                  <CardBody>\n                    <CardTitle>Spots</CardTitle>\n                    <Row>\n                      <Col md=\"4\">\n                        <Sparklines height={90} data={sampleData}>\n                          <SparklinesLine\n                            style={{\n                              fill: \"none\",\n                            }}/>\n                          <SparklinesSpots />\n                        </Sparklines>\n                      </Col>\n                      <Col md=\"4\">\n                        <Sparklines height={90} data={sampleData}>\n                          <SparklinesLine color=\"#56b45d\" />\n                          <SparklinesSpots\n                            style={{\n                              fill: \"#56b45d\",\n                            }}/>\n                        </Sparklines>\n                      </Col>\n                      <Col md=\"4\">\n                        <Sparklines height={90} data={sampleData} margin={6}>\n                          <SparklinesLine\n                            style={{\n                              strokeWidth: 3,\n                              stroke: \"#336aff\",\n                              fill: \"none\",\n                            }}/>\n                          <SparklinesSpots\n                            size={4}\n                            style={{\n                              stroke: \"#336aff\",\n                              strokeWidth: 3,\n                              fill: \"white\",\n                            }}/>\n                        </Sparklines>\n                      </Col>\n                    </Row>\n                  </CardBody>\n                </Card>\n                <Card className=\"main-card mb-3\">\n                  <CardBody>\n                    <CardTitle>Bars &amp; Bounds</CardTitle>\n                    <Row>\n                      <Col md=\"4\">\n                        <Sparklines height={90} data={sampleData} max={0.5}>\n                          <SparklinesLine />\n                        </Sparklines>\n                      </Col>\n                      <Col md=\"4\">\n                        <Sparklines height={90} data={sampleData}>\n                          <SparklinesBars\n                            style={{\n                              fill: \"#41c3f9\",\n                            }}/>\n                        </Sparklines>\n                      </Col>\n                      <Col md=\"4\">\n                        <Sparklines height={90} data={sampleData}>\n                          <SparklinesBars\n                            style={{\n                              stroke: \"white\",\n                              fill: \"#41c3f9\",\n                              fillOpacity: \".25\",\n                            }}/>\n                          <SparklinesLine\n                            style={{\n                              stroke: \"#41c3f9\",\n                              fill: \"none\",\n                            }}/>\n                        </Sparklines>\n                      </Col>\n                    </Row>\n                  </CardBody>\n                </Card>\n              </Col>\n\n              <Col md=\"3\">\n                <Card className=\"main-card mb-3\">\n                  <CardBody>\n                    <CardTitle>Reference Line</CardTitle>\n                    <div className=\"mb-4\">\n                      <Sparklines height={90} data={sampleData}>\n                        <SparklinesLine />\n                        <SparklinesReferenceLine type=\"max\" />\n                      </Sparklines>\n                    </div>\n                    <div className=\"mb-4\">\n                      <Sparklines height={90} data={sampleData}>\n                        <SparklinesLine />\n                        <SparklinesReferenceLine type=\"min\" />\n                      </Sparklines>\n                    </div>\n                    <div className=\"mb-4\">\n                      <Sparklines height={90} data={sampleData}>\n                        <SparklinesLine />\n                        <SparklinesReferenceLine type=\"mean\" />\n                      </Sparklines>\n                    </div>\n                    <div className=\"mb-4\">\n                      <Sparklines height={90} data={sampleData}>\n                        <SparklinesLine />\n                        <SparklinesReferenceLine type=\"avg\" />\n                      </Sparklines>\n                    </div>\n                    <div className=\"mb-4\">\n                      <Sparklines height={90} data={sampleData}>\n                        <SparklinesLine />\n                        <SparklinesReferenceLine type=\"median\" />\n                      </Sparklines>\n                    </div>\n                    <Sparklines height={90} data={sampleData}>\n                      <SparklinesBars\n                        style={{\n                          fill: \"slategray\",\n                          fillOpacity: \".5\",\n                        }}/>\n                      <SparklinesReferenceLine />\n                    </Sparklines>\n                  </CardBody>\n                </Card>\n              </Col>\n              <Col md=\"12\">\n                <Card className=\"main-card mb-3\">\n                  <CardBody>\n                    <CardTitle>Other Examples</CardTitle>\n                    <Row>\n                      <Col md=\"3\">\n                        <div className=\"mb-3\">\n                          <Sparklines height={90} data={sampleData}>\n                            <SparklinesLine\n                              style={{\n                                strokeWidth: 3,\n                                stroke: \"#336aff\",\n                                fill: \"none\",\n                              }}/>\n                          </Sparklines>\n                        </div>\n                      </Col>\n                      <Col md=\"3\">\n                        <div className=\"mb-3\">\n                          <Sparklines height={90} data={sampleData100} width={200}>\n                            <SparklinesLine\n                              style={{\n                                stroke: \"#2991c8\",\n                                fill: \"none\",\n                              }}/>\n                            <SparklinesSpots />\n                          </Sparklines>\n                        </div>\n                      </Col>\n                      <Col md=\"3\">\n                        <div className=\"mb-3\">\n                          <Sparklines height={90} data={sampleData100}>\n                            <SparklinesLine\n                              style={{\n                                stroke: \"black\",\n                                fill: \"none\",\n                              }}/>\n                            <SparklinesSpots\n                              style={{\n                                fill: \"orange\",\n                              }}/>\n                          </Sparklines>\n                        </div>\n                      </Col>\n                      <Col md=\"3\">\n                        <div className=\"mb-3\">\n                          <Sparklines height={90} data={sampleData}>\n                            <SparklinesBars\n                              style={{\n                                stroke: \"white\",\n                                strokeWidth: \"1\",\n                                fill: \"#40c0f5\",\n                              }}/>\n                          </Sparklines>\n                        </div>\n                      </Col>\n                      <Col md=\"3\">\n                        <div className=\"mb-3\">\n                          <Sparklines height={90} data={sampleData}>\n                            <SparklinesLine\n                              style={{\n                                stroke: \"#8ed53f\",\n                                strokeWidth: \"1\",\n                                fill: \"none\",\n                              }}/>\n                          </Sparklines>\n                        </div>\n                      </Col>\n                      <Col md=\"3\">\n                        <div className=\"mb-3\">\n                          <Sparklines height={90} data={sampleData}>\n                            <SparklinesLine\n                              style={{\n                                stroke: \"#d1192e\",\n                                strokeWidth: \"1\",\n                                fill: \"none\",\n                              }}/>\n                          </Sparklines>\n                        </div>\n                      </Col>\n                      <Col md=\"3\">\n                        <div className=\"mb-3\">\n                          <Sparklines height={90} data={sampleData}>\n                            <SparklinesLine\n                              style={{\n                                stroke: \"#559500\",\n                                fill: \"#8fc638\",\n                                fillOpacity: \"1\",\n                              }}/>\n                          </Sparklines>\n                        </div>\n                      </Col>\n                      <Col md=\"3\">\n                        <div className=\"mb-3\">\n                          <Sparklines height={90} data={sampleData}\n                            style={{\n                              background: \"#272727\",\n                            }}\n                            margin={10}>\n                            <SparklinesLine\n                              style={{\n                                stroke: \"none\",\n                                fill: \"#d2673a\",\n                                fillOpacity: \".5\",\n                              }}/>\n                          </Sparklines>\n                        </div>\n                      </Col>\n                      <Col md=\"3\">\n                        <div className=\"mb-1\">\n                          <Sparklines height={90} data={sampleData}\n                            style={{\n                              background: \"#00bdcc\",\n                            }}\n                            margin={10}>\n                            <SparklinesLine\n                              style={{\n                                stroke: \"white\",\n                                fill: \"none\",\n                              }}/>\n                            <SparklinesReferenceLine\n                              style={{\n                                stroke: \"white\",\n                                strokeOpacity: 0.75,\n                                strokeDasharray: \"2, 2\",\n                              }}/>\n                          </Sparklines>\n                        </div>\n                      </Col>\n                    </Row>\n                  </CardBody>\n                </Card>\n              </Col>\n            </Row>\n          </CSSTransition>\n        </TransitionGroup>\n      </Fragment>\n    );\n  }\n}\n\nexport default ChartsSparklines1;\n","import React, { Component, Fragment } from \"react\";\n\nimport PageTitle from \"../../../Layout/AppMain/PageTitle\";\n\n// Examples\nimport ChartsSparklines1 from \"./Examples\";\n\nexport default class Sparklines1Examples extends Component {\n  render() {\n    return (\n      <Fragment>\n        <PageTitle heading=\"Sparklines 1\"\n          subheading=\"Use these Sparklines charts inside other components or on their own.\"\n          icon=\"pe-7s-pendrive icon-gradient bg-mean-fruit\"/>\n        <ChartsSparklines1 />\n      </Fragment>\n    );\n  }\n}\n","import React, { Fragment } from \"react\";\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport PropTypes from \"prop-types\";\n\nimport { Row, Col, Card, CardBody, CardTitle } from \"reactstrap\";\n\nimport {\n  AreaChart,\n  Area,\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  Tooltip,\n  CartesianGrid,\n  Brush,\n  Legend,\n  ReferenceLine,\n  ResponsiveContainer,\n  RadialBarChart,\n  RadialBar,\n  BarChart,\n  Bar,\n  Cell,\n  ComposedChart,\n} from \"recharts\";\n\nconst data5 = [\n  { name: \"18-24\", uv: 31.47, pv: 2400, fill: \"#fece78\" },\n  { name: \"25-29\", uv: 26.69, pv: 4567, fill: \"#83a6ed\" },\n  { name: \"30-34\", uv: 15.69, pv: 1398, fill: \"#8dd1e1\" },\n  { name: \"35-39\", uv: 8.22, pv: 9800, fill: \"#82ca9d\" },\n  { name: \"40-49\", uv: 8.63, pv: 3908, fill: \"#a4de6c\" },\n  { name: \"50+\", uv: 2.63, pv: 4800, fill: \"#d0ed57\" },\n  { name: \"unknow\", uv: 6.67, pv: 4800, fill: \"#ffc658\" },\n];\n\n\nconst colors = [\n  \"#1f77b4\",\n  \"#ff7f0e\",\n  \"#2ca02c\",\n  \"#d62728\",\n  \"#9467bd\",\n  \"#8c564b\",\n  \"#e377c2\",\n  \"#7f7f7f\",\n  \"#bcbd22\",\n  \"#17becf\",\n];\n\nconst data1 = [\n  { name: \"Page A\", uv: 4000, female: 2400, male: 2400 },\n  { name: \"Page B\", uv: 3000, female: 1398, male: 2210 },\n  { name: \"Page C\", uv: 2000, female: 9800, male: 2290 },\n  { name: \"Page D\", uv: 2780, female: 3908, male: 2000 },\n  { name: \"Page E\", uv: 1890, female: 4800, male: 2181 },\n  { name: \"Page F\", uv: 2390, female: 3800, male: 2500 },\n  { name: \"Page G\", uv: 3490, female: 4300, male: 2100 },\n];\n\nconst data = [\n  { name: \"Page A\", uv: 4000, pv: 2400, amt: 2400 },\n  { name: \"Page B\", uv: 3000, pv: 1398, amt: 2210 },\n  { name: \"Page C\", uv: 2000, pv: 9800, amt: 2290 },\n  { name: \"Page D\", uv: 2780, pv: 3908, amt: 2000 },\n  { name: \"Page E\", uv: 1890, pv: 4800, amt: 2181 },\n  { name: \"Page F\", uv: 2390, pv: 3800, amt: 2500 },\n  { name: \"Page G\", uv: 3490, pv: 4300, amt: 2100 },\n];\n\nconst data3 = [\n  { month: \"2015.01\", a: 4000, b: 2400, c: 2400 },\n  { month: \"2015.02\", a: 3000, b: 1398, c: 2210 },\n  { month: \"2015.03\", a: 2000, b: 9800, c: 2290 },\n  { month: \"2015.04\", a: 2780, b: 3908, c: 2000 },\n  { month: \"2015.05\", a: 1890, b: 4800, c: 2181 },\n  { month: \"2015.06\", a: 2390, b: 3800, c: 2500 },\n  { month: \"2015.07\", a: 3490, b: 4300, c: 2100 },\n];\n\nconst getPercent = (value, total) => {\n  const ratio = total > 0 ? value / total : 0;\n\n  return toPercent(ratio, 2);\n};\n\nconst toPercent = (decimal, fixed = 0) => {\n  return `${(decimal * 100).toFixed(fixed)}%`;\n};\nconst renderTooltipContent = (o) => {\n  const { payload, label } = o;\n  const total = payload.reduce((result, entry) => result + entry.value, 0);\n\n  return (\n    <div className=\"customized-tooltip-content\">\n      <p className=\"total\">{`${label} (Total: ${total})`}</p>\n      <ul className=\"list\">\n        {payload.map((entry, index) => (\n          <li key={`item-${index}`} style={{ color: entry.color }}>\n            {`${entry.name}: ${entry.value}(${getPercent(entry.value, total)})`}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nconst getPath = (x, y, width, height) => {\n  return `M${x},${y + height}\n          C${x + width / 3},${y + height} ${x + width / 2},${y +\n    height / 3} ${x + width / 2}, ${y}\n          C${x + width / 2},${y + height / 3} ${x + (2 * width) / 3},${y +\n    height} ${x + width}, ${y + height}\n          Z`;\n};\n\nconst TriangleBar = (props) => {\n  const { fill, x, y, width, height } = props;\n\n  return <path d={getPath(x, y, width, height)} stroke=\"none\" fill={fill} />;\n};\n\nTriangleBar.propTypes = {\n  fill: PropTypes.string,\n  x: PropTypes.number,\n  y: PropTypes.number,\n  width: PropTypes.number,\n  height: PropTypes.number,\n};\n\n\nclass ChartsSparklines2 extends React.Component {\n  render() {\n    return (\n      <Fragment>\n        <TransitionGroup>\n          <CSSTransition component=\"div\" classNames=\"TabsAnimation\" appear={true}\n            timeout={1500} enter={false} exit={false}>\n            <div>\n              <Row>\n                <Col lg=\"6\">\n                  <Card className=\"main-card mb-3\">\n                    <CardBody>\n                      <CardTitle>Simple Line Charts</CardTitle>\n                      <ResponsiveContainer width=\"100%\" aspect={4.0 / 3.0}>\n                        <LineChart data={data} width={500} height={300}>\n                          <XAxis dataKey=\"name\" />\n                          <YAxis />\n                          <CartesianGrid strokeDasharray=\"3 3\" />\n                          <Tooltip />\n                          <Legend />\n                          <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#fece78\" activeDot={{ r: 8 }}/>\n                          <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#82ca9d\" />\n                        </LineChart>\n                      </ResponsiveContainer>\n                    </CardBody>\n                  </Card>\n                </Col>\n                <Col lg=\"6\">\n                  <Card className=\"main-card mb-3\">\n                    <CardBody>\n                      <CardTitle>Dashed Line Charts</CardTitle>\n                      <ResponsiveContainer width=\"100%\" aspect={4.0 / 3.0}>\n                        <LineChart data={data}>\n                          <CartesianGrid strokeDasharray=\"3 3\" />\n                          <XAxis dataKey=\"name\" />\n                          <YAxis />\n                          <Tooltip />\n                          <Legend />\n                          <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#fece78\" activeDot={{ r: 8 }} strokeDasharray=\"5 5\"/>\n                          <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#82ca9d\" strokeDasharray=\"3 4 5 2\"/>\n                        </LineChart>\n                      </ResponsiveContainer>\n                    </CardBody>\n                  </Card>\n                </Col>\n                <Col lg=\"6\">\n                  <Card className=\"main-card mb-3\">\n                    <CardBody>\n                      <CardTitle>Vertical Line Charts</CardTitle>\n                      <ResponsiveContainer width=\"100%\" aspect={4.0 / 3.0}>\n                        <LineChart layout=\"vertical\" data={data}>\n                          <CartesianGrid strokeDasharray=\"3 3\" />\n                          <XAxis type=\"number\" />\n                          <YAxis dataKey=\"name\" type=\"category\" />\n                          <Tooltip />\n                          <Legend />\n                          <Line dataKey=\"pv\" stroke=\"#fece78\" />\n                          <Line dataKey=\"uv\" stroke=\"#82ca9d\" />\n                        </LineChart>\n                      </ResponsiveContainer>\n                    </CardBody>\n                  </Card>\n                </Col>\n                <Col lg=\"6\">\n                  <Card className=\"main-card mb-3\">\n                    <CardBody>\n                      <CardTitle>Simple Bar Charts</CardTitle>\n                      <ResponsiveContainer width=\"100%\" aspect={4.0 / 3.0}>\n                        <BarChart data={data}>\n                          <CartesianGrid strokeDasharray=\"3 3\" />\n                          <XAxis dataKey=\"name\" />\n                          <YAxis />\n                          <Tooltip />\n                          <Legend />\n                          <Bar dataKey=\"pv\" fill=\"#fece78\" />\n                          <Bar dataKey=\"uv\" fill=\"#82ca9d\" />\n                        </BarChart>\n                      </ResponsiveContainer>\n                    </CardBody>\n                  </Card>\n                </Col>\n                <Col lg=\"6\">\n                  <Card className=\"main-card mb-3\">\n                    <CardBody>\n                      <CardTitle>Custom Shape Charts</CardTitle>\n                      <ResponsiveContainer width=\"100%\" aspect={4.0 / 3.0}>\n                        <BarChart data={data1}>\n                          <XAxis dataKey=\"name\" />\n                          <YAxis />\n                          <CartesianGrid strokeDasharray=\"3 3\" />\n                          <Bar dataKey=\"female\" fill=\"#fece78\" shape={<TriangleBar />} label={{ position: \"top\" }}>\n                            {data1.map((entry, index) => (\n                              <Cell\n                                key={`cell-${index}`}\n                                fill={colors[index % 20]}\n                              />\n                            ))}\n                          </Bar>\n                        </BarChart>\n                      </ResponsiveContainer>\n                    </CardBody>\n                  </Card>\n                </Col>\n                <Col lg=\"6\">\n                  <Card className=\"main-card mb-3\">\n                    <CardBody>\n                      <CardTitle>Positive/Negative Charts</CardTitle>\n                      <ResponsiveContainer width=\"100%\" aspect={4.0 / 3.0}>\n                        <BarChart data={data}>\n                          <CartesianGrid strokeDasharray=\"3 3\" />\n                          <XAxis dataKey=\"name\" />\n                          <YAxis />\n                          <Tooltip />\n                          <Legend />\n                          <ReferenceLine y={0} stroke=\"#000\" />\n                          <Bar dataKey=\"pv\" fill=\"#fece78\" />\n                          <Bar dataKey=\"uv\" fill=\"#82ca9d\" />\n                        </BarChart>\n                      </ResponsiveContainer>\n                    </CardBody>\n                  </Card>\n                </Col>\n                <Col lg=\"6\">\n                  <Card className=\"main-card mb-3\">\n                    <CardBody>\n                      <CardTitle>BrushBar Charts</CardTitle>\n                      <ResponsiveContainer width=\"100%\" aspect={4.0 / 3.0}>\n                        <BarChart data={data}>\n                          <CartesianGrid strokeDasharray=\"3 3\" />\n                          <XAxis dataKey=\"name\" />\n                          <YAxis />\n                          <Tooltip />\n                          <Legend verticalAlign=\"top\" wrapperStyle={{ lineHeight: \"40px\" }}/>\n                          <ReferenceLine y={0} stroke=\"#000\" />\n                          <Brush dataKey=\"name\" height={30} stroke=\"#fece78\" />\n                          <Bar dataKey=\"pv\" fill=\"#fece78\" />\n                          <Bar dataKey=\"uv\" fill=\"#82ca9d\" />\n                        </BarChart>\n                      </ResponsiveContainer>\n                    </CardBody>\n                  </Card>\n                </Col>\n                <Col lg=\"6\">\n                  <Card className=\"main-card mb-3\">\n                    <CardBody>\n                      <CardTitle>Area Charts</CardTitle>\n                      <ResponsiveContainer width=\"100%\" aspect={4.0 / 3.0}>\n                        <AreaChart data={data}>\n                          <CartesianGrid strokeDasharray=\"3 3\" />\n                          <XAxis dataKey=\"name\" />\n                          <YAxis />\n                          <Tooltip />\n                          <Area type=\"monotone\" dataKey=\"uv\" stroke=\"#fece78\" fill=\"#fece78\"/>\n                        </AreaChart>\n                      </ResponsiveContainer>\n                    </CardBody>\n                  </Card>\n                </Col>\n                <Col lg=\"6\">\n                  <Card className=\"main-card mb-3\">\n                    <CardBody>\n                      <CardTitle>Stacked Area Charts</CardTitle>\n                      <ResponsiveContainer width=\"100%\" aspect={4.0 / 3.0}>\n                        <AreaChart data={data}>\n                          <CartesianGrid strokeDasharray=\"3 3\" />\n                          <XAxis dataKey=\"name\" />\n                          <YAxis />\n                          <Tooltip />\n                          <Area type=\"monotone\" dataKey=\"uv\" stackId=\"1\" stroke=\"#fece78\" fill=\"#fece78\"/>\n                          <Area type=\"monotone\" dataKey=\"pv\" stackId=\"1\" stroke=\"#82ca9d\" fill=\"#82ca9d\"/>\n                          <Area type=\"monotone\" dataKey=\"amt\" stackId=\"1\" stroke=\"#ffc658\" fill=\"#ffc658\"/>\n                        </AreaChart>\n                      </ResponsiveContainer>\n                    </CardBody>\n                  </Card>\n                </Col>\n                <Col lg=\"6\">\n                  <Card className=\"main-card mb-3\">\n                    <CardBody>\n                      <CardTitle>Area Percent Charts</CardTitle>\n                      <ResponsiveContainer width=\"100%\" aspect={4.0 / 3.0}>\n                        <AreaChart data={data3} stackOffset=\"expand\">\n                          <XAxis dataKey=\"month\" />\n                          <YAxis tickFormatter={toPercent} />\n                          <Tooltip content={renderTooltipContent} />\n                          <Area type=\"monotone\" dataKey=\"a\" stackId=\"1\" stroke=\"#fece78\" fill=\"#fece78\"/>\n                          <Area type=\"monotone\" dataKey=\"b\" stackId=\"1\" stroke=\"#82ca9d\" fill=\"#82ca9d\"/>\n                          <Area type=\"monotone\" dataKey=\"c\" stackId=\"1\" stroke=\"#ffc658\" fill=\"#ffc658\"/>\n                        </AreaChart>\n                      </ResponsiveContainer>\n                    </CardBody>\n                  </Card>\n                </Col>\n                <Col lg=\"6\">\n                  <Card className=\"main-card mb-3\">\n                    <CardBody>\n                      <CardTitle>Composed Charts</CardTitle>\n                      <ResponsiveContainer width=\"100%\" aspect={4.0 / 3.0}>\n                        <ComposedChart data={data}>\n                          <CartesianGrid stroke=\"#f5f5f5\" />\n                          <XAxis dataKey=\"name\" />\n                          <YAxis />\n                          <Tooltip />\n                          <Legend />\n                          <Area type=\"monotone\" dataKey=\"amt\" fill=\"#fece78\" stroke=\"#fece78\"/>\n                          <Bar dataKey=\"pv\" barSize={20} fill=\"#413ea0\" />\n                          <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#ff7300\" />\n                        </ComposedChart>\n                      </ResponsiveContainer>\n                    </CardBody>\n                  </Card>\n                </Col>\n                <Col lg=\"6\">\n                  <Card className=\"main-card mb-3\">\n                    <CardBody>\n                      <CardTitle>Radial Bar Charts</CardTitle>\n                      <ResponsiveContainer width=\"100%\" aspect={4.0 / 3.0}>\n                        <RadialBarChart width={150} height={150} innerRadius={20}\n                          outerRadius={140} barSize={10} data={data5}>\n                          <RadialBar minAngle={15} label={{ position: \"insideStart\", fill: \"#fff\" }}\n                            background clockWise={true} dataKey=\"uv\"/>\n                        </RadialBarChart>\n                      </ResponsiveContainer>\n                    </CardBody>\n                  </Card>\n                </Col>\n              </Row>\n              <Row>\n                <Col lg=\"6\">\n                  <Card className=\"main-card mb-3\">\n                    <CardBody>\n                      <CardTitle>Sparkline Charts</CardTitle>\n                      <ResponsiveContainer width=\"100%\" aspect={4.0 / 3.0}>\n                        <LineChart data={data}>\n                          <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#fece78\" strokeWidth={2}/>\n                        </LineChart>\n                      </ResponsiveContainer>\n                    </CardBody>\n                  </Card>\n                </Col>\n                <Col lg=\"6\">\n                  <Card className=\"main-card mb-3\">\n                    <CardBody>\n                      <CardTitle>Sparkbar Charts</CardTitle>\n                      <ResponsiveContainer width=\"100%\" aspect={4.0 / 3.0}>\n                        <BarChart data={data}>\n                          <Bar dataKey=\"uv\" fill=\"#fece78\" />\n                        </BarChart>\n                      </ResponsiveContainer>\n                    </CardBody>\n                  </Card>\n                </Col>\n                <Col lg=\"6\">\n                  <Card className=\"main-card mb-3\">\n                    <CardBody>\n                      <CardTitle>SparkArea Charts</CardTitle>\n                      <ResponsiveContainer width=\"100%\" aspect={4.0 / 3.0}>\n                        <AreaChart width={200} height={60} data={data}\n                          margin={{ top: 5, right: 0, left: 0, bottom: 5 }}>\n                          <Area type=\"monotone\" dataKey=\"uv\" stroke=\"#fece78\" fill=\"#fece78\"/>\n                        </AreaChart>\n                      </ResponsiveContainer>\n                    </CardBody>\n                  </Card>\n                </Col>\n              </Row>\n            </div>\n          </CSSTransition>\n        </TransitionGroup>\n      </Fragment>\n    );\n  }\n}\n\nexport default ChartsSparklines2;\n","import React, { Fragment } from \"react\";\n\nimport PageTitle from \"../../../Layout/AppMain/PageTitle\";\n\n// Examples\nimport ChartsSparklines2 from \"./Examples/index\";\n\nexport default class Sparklines2Examples extends React.Component {\n  render() {\n    return (\n      <Fragment>\n        <PageTitle heading=\"Sparklines 2\"\n          subheading=\"All kind of sparkliness charts are available, from lines to bar charts.\"\n          icon=\"pe-7s-plane icon-gradient bg-tempting-azure\"/>\n        <ChartsSparklines2 />\n      </Fragment>\n    );\n  }\n}\n","import React from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\n\nconst data = {\n  labels: [\"Cars\", \"Trains\", \"Airplanes\"],\n  datasets: [\n    {\n      data: [300, 50, 100],\n      backgroundColor: [\"#8dace7\", \"#71deb9\", \"#ef869e\"],\n      hoverBackgroundColor: [\"#7097e1\", \"#4dd6a7\", \"#eb6886\"],\n      \n    },\n  ],\n};\n\n\nclass DoughnutExample extends React.Component {\n  render() {\n    return (\n      <div>\n        <Doughnut data={data} width={667} height={270} options={{ maintainAspectRatio: false }} />\n      </div>\n    );\n  }\n}\n\nexport default DoughnutExample;\n","import React from \"react\";\nimport { Pie } from \"react-chartjs-2\";\n\nconst data = {\n  labels: [\"Cars\", \"Trains\", \"Airplanes\"],\n  datasets: [\n    {\n      data: [300, 50, 100],\n      backgroundColor: [\"#8dace7\", \"#71deb9\", \"#ef869e\"],\n      hoverBackgroundColor: [\"#8dace7\", \"#71deb9\", \"#ef869e\"],\n    },\n  ],\n};\n\nclass PieExample extends React.Component {\n  render() {\n    return (\n      <div>\n        <Pie data={data} width={667} height={270} options={{ maintainAspectRatio: false }}/>\n      </div>\n    );\n  }\n}\n\nexport default PieExample;\n","import React from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\n\nfunction getRandomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\n// var createReactClass = require('create-react-class');\nexport default class DynamicDoughnutExample extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      data: {\n        labels: [\"Cars\", \"Trains\", \"Airplanes\"],\n        datasets: [\n          {\n            data: [\n              getRandomInt(50, 200),\n              getRandomInt(100, 150),\n              getRandomInt(150, 250),\n            ],\n            backgroundColor: [\"#cbd5dc\", \"#71deb9\", \"#ef869e\"],\n            hoverBackgroundColor: [\"#7097e1\", \"#4dd6a7\", \"#eb6886\"],\n          },\n        ],\n      },\n    };\n  }\n  render() {\n    return (\n      <div>\n        <Doughnut data={this.state.data} width={667} height={270} options={{ maintainAspectRatio: false }}/>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Radar } from \"react-chartjs-2\";\n\nconst data = {\n  labels: [\n    \"Eating\",\n    \"Drinking\",\n    \"Sleeping\",\n    \"Designing\",\n    \"Coding\",\n    \"Cycling\",\n    \"Running\",\n  ],\n  datasets: [\n    {\n      label: \"My First dataset\",\n      backgroundColor: \"rgba(179,181,198,0.2)\",\n      borderColor: \"rgba(179,181,198,1)\",\n      pointBackgroundColor: \"rgba(179,181,198,1)\",\n      pointBorderColor: \"#fff\",\n      pointHoverBackgroundColor: \"#fff\",\n      pointHoverBorderColor: \"rgba(179,181,198,1)\",\n      data: [65, 59, 90, 81, 56, 55, 40],\n    },\n    {\n      label: \"My Second dataset\",\n      backgroundColor: \"rgba(255,99,132,0.2)\",\n      borderColor: \"rgba(255,99,132,1)\",\n      pointBackgroundColor: \"rgba(255,99,132,1)\",\n      pointBorderColor: \"#fff\",\n      pointHoverBackgroundColor: \"#fff\",\n      pointHoverBorderColor: \"rgba(255,99,132,1)\",\n      data: [28, 48, 40, 19, 96, 27, 100],\n    },\n  ],\n};\n\nclass RadarExample extends React.Component {\n  render() {\n    return (\n      <div>\n        <Radar data={data} width={667} height={270} options={{ maintainAspectRatio: false }}/>\n      </div>\n    );\n  }\n}\n\nexport default RadarExample;\n","import React from \"react\";\nimport { PolarArea } from \"react-chartjs-2\";\n\nconst data = {\n  datasets: [\n    {\n      data: [11, 16, 7, 3, 14],\n      backgroundColor: [\"#8dace7\", \"#4BC0C0\", \"#ef869e\", \"#E7E9ED\", \"#71deb9\"],\n      label: \"My dataset\", // for legend\n    },\n  ],\n  labels: [\"Red\", \"Green\", \"Yellow\", \"Grey\", \"Blue\"],\n};\n\nclass PolarExample extends React.Component {\n  render() {\n    return (\n      <div>\n        <PolarArea data={data} width={667} height={270} options={{ maintainAspectRatio: false }}/>\n      </div>\n    );\n  }\n}\n\nexport default PolarExample;\n","import React, { Fragment } from \"react\";\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport DoughnutExample from \"../doughnut\";\nimport PieExample from \"../pie\";\nimport DynamicDoughnutExample from \"../dynamicDoughnut\";\nimport RadarExample from \"../radar\";\nimport PolarExample from \"../polar\";\n\nimport { Row, Col, Card, CardBody, CardTitle, Container } from \"reactstrap\";\n\nexport default class ChartJsCircular extends React.Component {\n  componentDidMount() {\n    window.removeEventListener(\"keyup\", this.keyHandling);\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <TransitionGroup>\n          <CSSTransition component=\"div\" classNames=\"TabsAnimation\" appear={true}\n            timeout={0} enter={false} exit={false}>\n            <Container fluid>\n              <Row>\n                <Col lg=\"6\">\n                  <Card className=\"main-card mb-3\">\n                    <CardBody>\n                      <CardTitle>Doughnut</CardTitle>\n                      <DoughnutExample />\n                    </CardBody>\n                  </Card>\n                </Col>\n                <Col lg=\"6\">\n                  <Card className=\"main-card mb-3\">\n                    <CardBody>\n                      <CardTitle>Dynamic Doughnut Chart</CardTitle>\n                      <DynamicDoughnutExample />\n                    </CardBody>\n                  </Card>\n                </Col>\n                <Col lg=\"6\">\n                  <Card className=\"main-card mb-3\">\n                    <CardBody>\n                      <CardTitle>Radar Chart</CardTitle>\n                      <RadarExample />\n                    </CardBody>\n                  </Card>\n                </Col>\n                <Col lg=\"6\">\n                  <Card className=\"main-card mb-3\">\n                    <CardBody>\n                      <CardTitle>Polar Chart</CardTitle>\n                      <PolarExample />\n                    </CardBody>\n                  </Card>\n                </Col>\n                <Col lg=\"6\">\n                  <Card className=\"main-card mb-3\">\n                    <CardBody>\n                      <CardTitle>Pie Chart</CardTitle>\n                      <PieExample />\n                    </CardBody>\n                  </Card>\n                </Col>\n              </Row>\n            </Container>\n          </CSSTransition>\n        </TransitionGroup>\n      </Fragment>\n    );\n  }\n}\n","import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\n\nconst data = {\n  labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\n  datasets: [\n    {\n      label: \"My First dataset\",\n      fill: false,\n      lineTension: 0.1,\n      backgroundColor: \"#ed0f51\",\n      borderColor: \"#ed0f51\",\n      borderCapStyle: \"round\",\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: \"miter\",\n      pointBorderColor: \"#ed0f51\",\n      pointBackgroundColor: \"#ffffff\",\n      pointBorderWidth: 2,\n      pointHoverRadius: 10,\n      pointHoverBackgroundColor: \"#ed0f51\",\n      pointHoverBorderColor: \"#ed0f51\",\n      pointHoverBorderWidth: 2,\n      pointRadius: 1,\n      pointHitRadius: 10,\n      data: [65, 59, 80, 81, 56, 55, 40],\n    },\n  ],\n};\n\nclass LineExample extends React.Component {\n  render() {\n    return (\n      <div>\n        <Line data={data} />\n      </div>\n    );\n  }\n}\n\nexport default LineExample;\n","import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\n\nconst data = {\n  labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\n  datasets: [\n    {\n      label: \"My First dataset\",\n      fill: true,\n      lineTension: 0.1,\n      backgroundColor: \"rgba(75,192,192,0.4)\",\n      borderColor: \"rgba(75,192,192,1)\",\n      borderCapStyle: \"round\",\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: \"miter\",\n      pointBorderColor: \"rgba(75,192,192,1)\",\n      pointBackgroundColor: \"#fff\",\n      pointBorderWidth: 1,\n      pointHoverRadius: 5,\n      pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\n      pointHoverBorderColor: \"rgba(220,220,220,1)\",\n      pointHoverBorderWidth: 2,\n      pointRadius: 1,\n      pointHitRadius: 10,\n      data: [65, 59, 80, 81, 56, 55, 40],\n    },\n  ],\n};\n\nclass LineExample2 extends React.Component {\n  render() {\n    return (\n      <div>\n        <Line data={data} />\n      </div>\n    );\n  }\n}\n\nexport default LineExample2;\n","import React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\n\nconst data = {\n  labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\n  datasets: [\n    {\n      label: \"My First dataset\",\n      backgroundColor: \"rgba(255,99,132,0.2)\",\n      borderColor: \"rgba(255,99,132,1)\",\n      borderWidth: 1,\n      hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\n      hoverBorderColor: \"rgba(255,99,132,1)\",\n      borderCapStyle: \"round\",\n      data: [65, 59, 80, 81, 56, 55, 40],\n    },\n  ],\n};\n\nclass BarExample extends React.Component {\n  render() {\n    return (\n      <div>\n        <Bar data={data} width={100} height={50}\n          options={{\n            maintainAspectRatio: true,\n          }} />\n      </div>\n    );\n  }\n}\n\nexport default BarExample;\n","import React from \"react\";\nimport { Bar  } from \"react-chartjs-2\";\n\nconst data = {\n  labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\n  datasets: [\n    {\n      label: \"My First dataset\",\n      backgroundColor: \"rgba(255,99,132,0.2)\",\n      borderColor: \"rgba(255,99,132,1)\",\n      borderWidth: 1,\n      hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\n      hoverBorderColor: \"rgba(255,99,132,1)\",\n      borderCapStyle: \"round\",\n      data: [65, 59, 80, 81, 56, 55, 40],\n    },\n  ],\n};\n\nconst options = {\n  indexAxis: 'y',\n};\nclass BarExample extends React.Component {\n  render() {\n    return (\n      <div>\n        <Bar data={data} options={options}/>\n      </div>\n    );\n  }\n}\n\nexport default BarExample;\n","import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\n\nconst initialState = {\n  labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\n  datasets: [\n    {\n      label: \"My First dataset\",\n      fill: false,\n      lineTension: 0.1,\n      backgroundColor: \"rgba(75,192,192,0.4)\",\n      borderColor: \"rgba(75,192,192,1)\",\n      borderCapStyle: \"round\",\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: \"miter\",\n      pointBorderColor: \"rgba(75,192,192,1)\",\n      pointBackgroundColor: \"#fff\",\n      pointBorderWidth: 1,\n      pointHoverRadius: 5,\n      pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\n      pointHoverBorderColor: \"rgba(220,220,220,1)\",\n      pointHoverBorderWidth: 2,\n      pointRadius: 1,\n      pointHitRadius: 10,\n      data: [65, 59, 80, 81, 56, 55, 40],\n    },\n  ],\n};\n\n// var createReactClass = require('create-react-class');\n\nclass Graph extends React.Component {\n  UNSAFE_componentWillMount() {\n    this.setState(initialState);\n  }\n  componentDidMount() {\n    var _this = this;\n\n    setInterval(function() {\n      var oldDataSet = _this.state.datasets[0];\n      var newData = [];\n\n      for (var x = 0; x < _this.state.labels.length; x++) {\n        newData.push(Math.floor(Math.random() * 100));\n      }\n\n      var newDataSet = {\n        ...oldDataSet,\n      };\n\n      newDataSet.data = newData;\n\n      var newState = {\n        ...initialState,\n        datasets: [newDataSet],\n      };\n\n      _this.setState(newState);\n    }, 5000);\n  }\n  render() {\n    return <Line data={this.state} />;\n  }\n}\n\nclass MixExample extends React.Component {\n  render() {\n    return (\n      <div>\n        <Graph />\n      </div>\n    );\n  }\n}\n\nexport default MixExample;\n","import React, { Fragment } from \"react\";\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport LineExample from \"../line\";\nimport LineExample2 from \"../line2\";\nimport BarExample from \"../bar\";\nimport HorizontalBarExample from \"../horizontalBar\";\nimport MixExample from \"../mix\";\n\nimport { Row, Col, Card, CardBody, CardTitle, Container } from \"reactstrap\";\n\nexport default class ChartJsLinesBars extends React.Component {\n  render() {\n    return (\n      <Fragment>\n        <TransitionGroup>\n          <CSSTransition component=\"div\" classNames=\"TabsAnimation\" appear={true}\n            timeout={0} enter={false} exit={false}>\n            <Container fluid>\n              <Row>\n                <Col lg=\"6\">\n                  <Card className=\"main-card mb-3\">\n                    <CardBody>\n                      <CardTitle>Line Chart</CardTitle>\n                      <LineExample />\n                    </CardBody>\n                  </Card>\n                </Col>\n                <Col lg=\"6\">\n                  <Card className=\"main-card mb-3\">\n                    <CardBody>\n                      <CardTitle>Animated Line Chart</CardTitle>\n                      <MixExample />\n                    </CardBody>\n                  </Card>\n                </Col>\n                <Col lg=\"6\">\n                  <Card className=\"main-card mb-3\">\n                    <CardBody>\n                      <CardTitle>Area Chart</CardTitle>\n                      <LineExample2 />\n                    </CardBody>\n                  </Card>\n                </Col>\n                <Col lg=\"6\">\n                  <Card className=\"main-card mb-3\">\n                    <CardBody>\n                      <CardTitle>Bar Chart</CardTitle>\n                      <BarExample />\n                    </CardBody>\n                  </Card>\n                </Col>\n                <Col lg=\"6\">\n                  <Card className=\"main-card mb-3\">\n                    <CardBody>\n                      <CardTitle>Horizontal Bar Chart</CardTitle>\n                      <HorizontalBarExample />\n                    </CardBody>\n                  </Card>\n                </Col>\n              </Row>\n            </Container>\n          </CSSTransition>\n        </TransitionGroup>\n      </Fragment>\n    );\n  }\n}\n","import React, { Component, Fragment } from \"react\";\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nimport PageTitle from \"../../../Layout/AppMain/PageTitle\";\n\nimport Tabs, { TabPane } from \"rc-tabs\";\nimport TabContent from \"rc-tabs/lib/SwipeableTabContent\";\nimport ScrollableInkTabBar from \"rc-tabs/lib/ScrollableInkTabBar\";\n\n// Examples\nimport ChartJsCircular from \"./Examples/Circular\";\nimport ChartJsLinesBars from \"./Examples/LinesBars\";\n\nexport default class ChartJSExamples extends Component {\n  render() {\n    return (\n      <Fragment>\n        <TransitionGroup>\n          <CSSTransition component=\"div\" classNames=\"TabsAnimation\" appear={true}\n            timeout={1500} enter={false} exit={false}>\n            <div>  \n              <PageTitle heading=\"ChartJS\"\n                subheading=\"Huge selection of charts created with the React ChartJS Plugin\"\n                icon=\"pe-7s-bandaid icon-gradient bg-amy-crisp\"/>\n              <Tabs defaultActiveKey=\"1\" renderTabBar={() => <ScrollableInkTabBar />} renderTabContent={() => <TabContent />}>\n                <TabPane tab=\"Circular Charts\" key=\"1\">\n                  <ChartJsCircular />\n                </TabPane>\n                <TabPane tab=\"Lines & Bars Charts\" key=\"2\">\n                  <ChartJsLinesBars />\n                </TabPane>\n              </Tabs>\n            </div>\n          </CSSTransition>\n        </TransitionGroup>\n      </Fragment>\n    );\n  }\n}\n","import { color } from \"d3-color\";\nimport { interpolateRgb } from \"d3-interpolate\";\nimport React, { Fragment, Component } from \"react\";\nimport LiquidFillGauge from \"react-liquid-gauge\";\nimport { Row, Col, Card, CardBody, CardTitle, Button } from \"reactstrap\";\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nexport default class ChartsLiquidGaugeExample extends Component {\n  state = {\n    value: 50,\n  };\n  startColor = \"#6495ed\"; // cornflowerblue\n  endColor = \"#dc143c\"; // crimson\n  render() {\n    const radius = 80;\n    const interpolate = interpolateRgb(this.startColor, this.endColor);\n    const fillColor = interpolate(this.state.value / 100);\n    const gradientStops = [\n      {\n        key: \"0%\",\n        stopColor: color(fillColor)\n          .darker(0.5)\n          .toString(),\n        stopOpacity: 1,\n        offset: \"0%\",\n      },\n      {\n        key: \"50%\",\n        stopColor: fillColor,\n        stopOpacity: 0.75,\n        offset: \"50%\",\n      },\n      {\n        key: \"100%\",\n        stopColor: color(fillColor)\n          .brighter(0.5)\n          .toString(),\n        stopOpacity: 0.5,\n        offset: \"100%\",\n      },\n    ];\n    return (\n      <Fragment>\n        <TransitionGroup>\n          <CSSTransition component=\"div\" classNames=\"TabsAnimation\" appear={true}\n            timeout={1500} enter={false} exit={false}>\n            <Row>\n              <Col md=\"12\">\n                <Card className=\"main-card mb-3\">\n                  <CardBody>\n                    <CardTitle>Liquid Gauges</CardTitle>\n                    <Row className=\"text-center\">\n                      <Col md=\"6\" lg=\"4\">\n                        <LiquidFillGauge style={{ margin: \"0 auto\" }} width={radius} height={radius} value={this.state.value}\n                          percent=\"\" textSize={1} textOffsetX={0} textOffsetY={0}\n                          textRenderer={(props) => {\n                            const value = Math.round(props.value);\n                            const radius = Math.min(\n                              props.height / 2,\n                              props.width / 2\n                            );\n                            const textPixels = (props.textSize * radius) / 2;\n                            const valueStyle = {\n                              fontSize: textPixels,\n                            };\n                            const percentStyle = {\n                              fontSize: textPixels * 0.6,\n                            };\n\n                            return (\n                              <tspan>\n                                <tspan className=\"value\" style={valueStyle}>\n                                  {value}\n                                </tspan>\n                                <tspan style={percentStyle}>\n                                  {props.percent}\n                                </tspan>\n                              </tspan>\n                            );\n                          }}\n                          riseAnimation waveAnimation waveFrequency={5} waveAmplitude={3} gradient\n                          gradientStops={gradientStops}\n                          circleStyle={{\n                            fill: fillColor,\n                          }}\n                          waveStyle={{\n                            fill: fillColor,\n                          }}\n                          textStyle={{\n                            fill: color(\"#989fa4\").toString(),\n                          }}\n                          waveTextStyle={{\n                            fill: color(\"#fff\").toString(),\n                          }}\n                          onClick={() => {\n                            this.setState({ value: Math.random() * 100 });\n                          }}/>\n                      </Col>\n                      <Col md=\"6\" lg=\"4\">\n                        <LiquidFillGauge style={{ margin: \"0 auto\" }} width={radius * 1.5} height={radius * 1.5}\n                          value={this.state.value} percent=\"\" textSize={1} textOffsetX={0} textOffsetY={0}\n                          textRenderer={(props) => {\n                            const value = Math.round(props.value);\n                            const radius = Math.min(\n                              props.height / 2,\n                              props.width / 2\n                            );\n                            const textPixels = (props.textSize * radius) / 2;\n                            const valueStyle = {\n                              fontSize: textPixels,\n                            };\n                            const percentStyle = {\n                              fontSize: textPixels * 0.6,\n                            };\n\n                            return (\n                              <tspan>\n                                <tspan className=\"value\" style={valueStyle}>\n                                  {value}\n                                </tspan>\n                                <tspan style={percentStyle}>\n                                  {props.percent}\n                                </tspan>\n                              </tspan>\n                            );\n                          }}\n                          riseAnimation waveAnimation waveFrequency={3} waveAmplitude={4} gradient\n                          gradientStops={gradientStops}\n                          circleStyle={{\n                            fill: fillColor,\n                          }}\n                          waveStyle={{\n                            fill: fillColor,\n                          }}\n                          textStyle={{\n                            fill: color(\"#989fa4\").toString(),\n                          }}\n                          waveTextStyle={{\n                            fill: color(\"#fff\").toString(),\n                          }}\n                          onClick={() => {\n                            this.setState({ value: Math.random() * 100 });\n                          }}\n                        />\n                      </Col>\n                      <Col md=\"6\" lg=\"4\">\n                        <LiquidFillGauge style={{ margin: \"0 auto\" }} width={radius * 2} height={radius * 2}\n                          value={this.state.value} percent=\"%\" textSize={1} textOffsetX={0} textOffsetY={0}\n                          textRenderer={(props) => {\n                            const value = Math.round(props.value);\n                            const radius = Math.min(\n                              props.height / 2,\n                              props.width / 2\n                            );\n                            const textPixels = (props.textSize * radius) / 2;\n                            const valueStyle = {\n                              fontSize: textPixels,\n                            };\n                            const percentStyle = {\n                              fontSize: textPixels * 0.6,\n                            };\n\n                            return (\n                              <tspan>\n                                <tspan className=\"value\" style={valueStyle}>\n                                  {value}\n                                </tspan>\n                                <tspan style={percentStyle}>\n                                  {props.percent}\n                                </tspan>\n                              </tspan>\n                            );\n                          }}\n                          riseAnimation waveAnimation waveFrequency={3} waveAmplitude={2} gradient\n                          gradientStops={gradientStops}\n                          circleStyle={{\n                            fill: fillColor,\n                          }}\n                          waveStyle={{\n                            fill: fillColor,\n                          }}\n                          textStyle={{\n                            fill: color(\"#989fa4\").toString(),\n                          }}\n                          waveTextStyle={{\n                            fill: color(\"#fff\").toString(),\n                          }}\n                          onClick={() => {\n                            this.setState({ value: Math.random() * 100 });\n                          }}/>\n                      </Col>\n                    </Row>\n                    <div className=\"divider\" />\n                    <div className=\"text-center\">\n                      <Button type=\"button\" color=\"primary\" className=\"btn-wide btn-shadow btn-pill\"\n                        onClick={() => {\n                          this.setState({ value: Math.random() * 100 });\n                        }}>\n                        Refresh\n                      </Button>\n                    </div>\n                  </CardBody>\n                </Card>\n              </Col>\n            </Row>\n          </CSSTransition>\n        </TransitionGroup>\n      </Fragment>\n    );\n  }\n}\n","import React, { Component, Fragment } from \"react\";\n\nimport PageTitle from \"../../../Layout/AppMain/PageTitle\";\n\n// Examples\nimport ChartsLiquidGaugeExample from \"./Examples/liquidGauge\";\n\nexport default class ChartsGauges extends Component {\n  render() {\n    return (\n      <Fragment>\n        <PageTitle heading=\"Gauges\"\n          subheading=\"Create wonderful animated gauges that can be used in combination with other ArchitectUI elements.\"\n          icon=\"pe-7s-car icon-gradient bg-warm-flame\"/>\n        <ChartsLiquidGaugeExample />\n      </Fragment>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Chart from 'react-apexcharts'\n\nclass Area extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            options3: {\n                chart: {\n                    height: 350,\n                    type: 'area',\n                },\n                dataLabels: {\n                    enabled: false\n                },\n                stroke: {\n                    curve: 'smooth'\n                },\n                xaxis: {\n                    type: 'datetime',\n                    categories: [\"2018-09-19T00:00:00\", \"2018-09-19T01:30:00\", \"2018-09-19T02:30:00\", \"2018-09-19T03:30:00\", \"2018-09-19T04:30:00\", \"2018-09-19T05:30:00\", \"2018-09-19T06:30:00\"],\n                },\n                tooltip: {\n                    x: {\n                        format: 'dd/MM/yy HH:mm'\n                    },\n                }\n            },\n\n            series: [{\n                name: 'series1',\n                data: [31, 40, 28, 51, 42, 109, 100]\n            }, {\n                name: 'series2',\n                data: [11, 32, 45, 32, 34, 52, 41]\n            }],\n        }\n    }\n\n    render() {\n\n        return (\n            <div className=\"area\">\n                <Chart options={this.state.options3} series={this.state.series} width=\"100%\" />\n            </div>\n        );\n    }\n}\n\nexport default Area;\n","import React, { Component } from 'react';\nimport Chart from 'react-apexcharts'\n\nclass Bar extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            options2: {\n                chart: {\n                    id: 'apexchart-example-3'\n                },\n                dataLabels: {\n                    enabled: false\n                },\n                plotOptions: {\n                    bar: {\n                        horizontal: true\n                    }\n                },\n                xaxis: {\n                    categories: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n                }\n            },\n            series2: [{\n                data: [30, 40, 25, 50, 49, 21, 70, 51]\n            }],\n        }\n    }\n\n    render() {\n\n        return (\n            <div className=\"bar\">\n                <Chart options={this.state.options2} series={this.state.series2} type=\"bar\" width=\"100%\" />\n            </div>\n        );\n    }\n}\n\nexport default Bar;\n","import React, { Component } from 'react';\nimport Chart from 'react-apexcharts'\n\nclass Donut extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      options4: {\n        chart: {\n          id: 'apexchart-example-2'\n        },\n        labels: ['A', 'B', 'C', 'D', 'E'],\n      },\n      series4: [44, 55, 41, 17, 15],\n    }\n  }\n\n  render() {\n\n    return (\n      <div className=\"donut text-center\">\n        <Chart options={this.state.options4} series={this.state.series4} type=\"donut\" width=\"50%\" />\n      </div>\n    );\n  }\n}\n\nexport default Donut;\n","import React, { Component } from 'react';\nimport Chart from 'react-apexcharts'\n\nclass RadialBar extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      options: {\n        labels: ['RadialBar'],\n        plotOptions: {\n          radialBar: {\n            hollow: {\n              size: '70%',\n            }\n          },\n        },\n      },\n      series: [68],\n    }\n  }\n\n  render() {\n\n    return (\n      <div className=\"radialbar\">\n        <Chart options={this.state.options} series={this.state.series} type=\"radialBar\" height=\"380\" />\n      </div>\n    );\n  }\n}\n\nexport default RadialBar;\n","import React, { Component, Fragment } from \"react\";\n\nimport { Row, Col, Card, CardBody, CardTitle } from \"reactstrap\";\n\n// Examples\nimport Area from \"./Area\";\nimport Bar from \"./Bar\";\n// import Column from './Column';\n// import Line from './Line';\nimport Donut from \"./Donut\";\nimport RadialBar from \"./RadialBar\";\n\nexport default class ApexChartsBasic extends Component {\n  render() {\n    return (\n      <Fragment>\n        <Row>\n          <Col md=\"6\">\n            <Card className=\"mb-3\">\n              <CardBody>\n                <CardTitle>Line</CardTitle>\n                <Area />\n              </CardBody>\n            </Card>\n            <Card className=\"mb-3\">\n              <CardBody>\n                <CardTitle>Donut</CardTitle>\n                <Donut />\n              </CardBody>\n            </Card>\n          </Col>\n          <Col md=\"6\">\n            <Card className=\"mb-3\">\n              <CardBody>\n                <CardTitle>RadialBar</CardTitle>\n                <RadialBar />\n              </CardBody>\n            </Card>\n            <Card className=\"mb-3\">\n              <CardBody>\n                <CardTitle>Bar</CardTitle>\n                <Bar />\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </Fragment>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Chart from 'react-apexcharts'\n\nclass Area extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            options3: {\n                chart: {\n                    height: 350,\n                    type: 'area',\n                    sparkline: {\n                        enabled: true,\n                    }\n                },\n                dataLabels: {\n                    enabled: false\n                },\n                stroke: {\n                    curve: 'smooth'\n                },\n                xaxis: {\n                    type: 'datetime',\n                    categories: [\"2018-09-19T00:00:00\", \"2018-09-19T01:30:00\", \"2018-09-19T02:30:00\", \"2018-09-19T03:30:00\", \"2018-09-19T04:30:00\", \"2018-09-19T05:30:00\", \"2018-09-19T06:30:00\"],\n                },\n                tooltip: {\n                    x: {\n                        format: 'dd/MM/yy HH:mm'\n                    },\n                },\n            },\n\n            series: [{\n                name: 'series1',\n                data: [31, 40, 28, 51, 42, 109, 100]\n            }, {\n                name: 'series2',\n                data: [11, 32, 45, 32, 34, 52, 41]\n            }],\n        }\n    }\n\n    render() {\n\n        return (\n            <div className=\"area\">\n                <Chart options={this.state.options3} series={this.state.series} width=\"100%\" />\n            </div>\n        );\n    }\n}\n\nexport default Area;","import React, { Component } from 'react';\nimport Chart from 'react-apexcharts'\n\nclass Bar extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            options: {\n                dataLabels: {\n                    enabled: false\n                },\n                plotOptions: {\n                    bar: {\n                        horizontal: true\n                    }\n                },\n                xaxis: {\n                    categories: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n                },\n\n                chart: {\n                    sparkline: {\n                        enabled: true,\n                    }\n                }\n            },\n            series: [{\n                data: [30, 40, 25, 50, 49, 21, 70, 51]\n            }],\n        }\n    }\n\n    render() {\n\n        return (\n            <div className=\"bar\">\n                <Chart options={this.state.options} series={this.state.series} type=\"bar\" width=\"100%\" />\n            </div>\n        );\n    }\n}\n\nexport default Bar;\n","import React, { Component } from 'react';\nimport Chart from 'react-apexcharts'\n\nclass Line extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      options: {\n        stroke: {\n          curve: 'smooth'\n        },\n        markers: {\n          size: 0\n        },\n        xaxis: {\n          categories: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n        },\n        chart: {\n          sparkline: {\n            enabled: true,\n          }\n        }\n      },\n      series: [{\n        data: [30, 40, 25, 50, 49, 21, 70, 51]\n      }],\n    }\n  }\n\n  render() {\n\n    return (\n      <div className=\"line\">\n        <Chart options={this.state.options} series={this.state.series} type=\"line\" width=\"100%\" />\n      </div>\n    );\n  }\n}\n\nexport default Line;\n","import React, { Component, Fragment } from \"react\";\n\nimport { Row, Col, Card, CardBody, CardTitle } from \"reactstrap\";\n\n// Examples\nimport Area from \"./Area\";\nimport Bar from \"./Bar\";\n// import Column from './Column';\nimport Line from \"./Line\";\n\nexport default class ApexChartsSparklines extends Component {\n  render() {\n    return (\n      <Fragment>\n        <Row>\n          <Col md=\"4\">\n            <Card className=\"mb-3\">\n              <CardBody>\n                <CardTitle>Area</CardTitle>\n                <Area />\n              </CardBody>\n            </Card>\n          </Col>\n          <Col md=\"4\">\n            <Card className=\"mb-3\">\n              <CardBody>\n                <CardTitle>Bar</CardTitle>\n                <Bar />\n              </CardBody>\n            </Card>\n          </Col>\n          <Col md=\"4\">\n            <Card className=\"mb-3\">\n              <CardBody>\n                <CardTitle>Line</CardTitle>\n                <Line />\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </Fragment>\n    );\n  }\n}\n","import React, { Component, Fragment } from \"react\";\n\nimport PageTitle from \"../../../Layout/AppMain/PageTitle\";\n\n// Examples\nimport ApexChartsBasic from \"./Examples/Basic/\";\nimport ApexChartsSparklines from \"./Examples/Sparklines/\";\n\nexport default class ApexCharts extends Component {\n  render() {\n    return (\n      <Fragment>\n        <PageTitle heading=\"Apex Charts\"\n          subheading=\"Wonderful animated charts built as a ReactJS component.\"\n          icon=\"pe-7s-graph2 icon-gradient bg-happy-green\"/>\n        <ApexChartsBasic />\n        <ApexChartsSparklines />\n      </Fragment>\n    );\n  }\n}\n","import React, { Fragment } from \"react\";\nimport { Route } from \"react-router-dom\";\n\n// Charts\n\nimport ChartsSparklines1 from \"./Sparklines1/\";\nimport ChartsSparklines2 from \"./Sparklines2/\";\nimport ChartsChartJs from \"./ChartJs/\";\nimport ChartsGauges from \"./Gauges/\";\nimport ApexCharts from \"./ApexCharts/\";\n\n// Layout\n\nimport AppHeader from \"../../Layout/AppHeader/\";\nimport AppSidebar from \"../../Layout/AppSidebar/\";\nimport AppFooter from \"../../Layout/AppFooter/\";\n\n// Theme Options\n\nimport ThemeOptions from \"../../Layout/ThemeOptions/\";\n\nconst Charts = ({ match }) => (\n  <Fragment>\n    <ThemeOptions />\n    <AppHeader />\n    <div className=\"app-main\">\n      <AppSidebar />\n      <div className=\"app-main__outer\">\n        <div className=\"app-main__inner\">\n          {/* Charts */}\n\n          <Route path={`${match.url}/sparklines-1`} component={ChartsSparklines1}/>\n          <Route path={`${match.url}/sparklines-2`} component={ChartsSparklines2}/>\n          <Route path={`${match.url}/chartjs`} component={ChartsChartJs} />\n          <Route path={`${match.url}/gauges`} component={ChartsGauges} />\n          <Route path={`${match.url}/apexcharts`} component={ApexCharts} />\n        </div>\n        <AppFooter />\n      </div>\n    </div>\n  </Fragment>\n);\n\nexport default Charts;\n"],"names":["boxMullerRandom","x1","x2","w","Math","random","sqrt","log","randomData","n","Array","apply","map","sampleData","sampleData1","sampleData2","sampleData3","sampleData4","sampleData5","sampleData6","sampleData7","sampleData100","ChartsSparklines1","props","state","data","setInterval","setState","concat","clearInterval","this","timeout","Fragment","TransitionGroup","CSSTransition","component","classNames","appear","enter","exit","md","className","Sparklines","height","SparklinesLine","SparklinesCurve","limit","color","SparklinesSpots","SparklinesBars","style","fill","fillOpacity","stroke","SparklinesReferenceLine","type","margin","strokeWidth","size","max","width","background","strokeOpacity","strokeDasharray","React","Sparklines1Examples","PageTitle","heading","subheading","icon","Component","data5","name","uv","pv","colors","data1","female","male","amt","data3","month","a","b","c","getPercent","value","total","toPercent","decimal","fixed","toFixed","renderTooltipContent","o","payload","label","reduce","result","entry","index","getPath","x","y","TriangleBar","d","ChartsSparklines2","lg","ResponsiveContainer","aspect","LineChart","XAxis","dataKey","YAxis","CartesianGrid","Tooltip","Legend","Line","activeDot","r","layout","BarChart","Bar","shape","position","Cell","ReferenceLine","verticalAlign","wrapperStyle","lineHeight","Brush","B","AreaChart","Area","stackId","stackOffset","tickFormatter","content","ComposedChart","barSize","RadialBarChart","innerRadius","outerRadius","RadialBar","minAngle","clockWise","top","right","left","bottom","Sparklines2Examples","labels","datasets","backgroundColor","hoverBackgroundColor","DoughnutExample","options","maintainAspectRatio","PieExample","getRandomInt","min","floor","DynamicDoughnutExample","borderColor","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","RadarExample","PolarExample","ChartJsCircular","window","removeEventListener","keyHandling","fluid","lineTension","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderWidth","pointHoverRadius","pointHoverBorderWidth","pointRadius","pointHitRadius","LineExample","LineExample2","borderWidth","hoverBorderColor","BarExample","indexAxis","initialState","Graph","_this","oldDataSet","newData","length","push","newDataSet","newState","MixExample","ChartJsLinesBars","ChartJSExamples","defaultActiveKey","renderTabBar","ScrollableInkTabBar","renderTabContent","tab","ChartsLiquidGaugeExample","startColor","endColor","radius","fillColor","interpolateRgb","interpolate","gradientStops","key","stopColor","darker","toString","stopOpacity","offset","brighter","percent","textSize","textOffsetX","textOffsetY","textRenderer","round","textPixels","valueStyle","fontSize","percentStyle","riseAnimation","waveAnimation","waveFrequency","waveAmplitude","gradient","circleStyle","waveStyle","textStyle","waveTextStyle","onClick","ChartsGauges","options3","chart","dataLabels","enabled","curve","xaxis","categories","tooltip","format","series","options2","id","plotOptions","bar","horizontal","series2","Donut","options4","series4","radialBar","hollow","ApexChartsBasic","sparkline","markers","ApexChartsSparklines","ApexCharts","match","ThemeOptions","AppHeader","AppSidebar","path","url","ChartsChartJs","AppFooter"],"sourceRoot":""}