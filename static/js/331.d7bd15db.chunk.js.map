{"version":3,"file":"static/js/331.d7bd15db.chunk.js","mappings":"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","sources":["AppPages/Portals/Components/OpenPortalModal.js","AppPages/Portals/Components/BuyBoxes.js","AppPages/Portals/index.js"],"sourcesContent":["import React from \"react\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Spinner\r\n} from \"reactstrap\";\r\n\r\n//import all videos + mapping function\r\nimport commonCaveMonkey from \"../../../assets/portalVideos/common/CaveMonkey.mp4\";\r\nimport commonGatherer from \"../../../assets/portalVideos/common/Gatherer.mp4\";\r\nimport commonHunter from \"../../../assets/portalVideos/common/Hunter.mp4\";\r\nimport commonFireBender from \"../../../assets/portalVideos/common/FireBender.mp4\";\r\nimport commonFarmer from \"../../../assets/portalVideos/common/Farmer.mp4\";\r\nimport commonGuardian from \"../../../assets/portalVideos/common/Guardian.mp4\";\r\nimport commonKing from \"../../../assets/portalVideos/common/King.mp4\";\r\nimport commonIntern from \"../../../assets/portalVideos/common/Intern.mp4\";\r\nimport commonCryptoInvestor from \"../../../assets/portalVideos/common/CryptoInvestor.mp4\";\r\nimport commonMetaMonkey from \"../../../assets/portalVideos/common/MetaMonkey.mp4\";\r\nimport commonCyborg from \"../../../assets/portalVideos/common/Cyborg.mp4\";\r\n\r\nimport goldenCaveMonkey from \"../../../assets/portalVideos/golden/CaveMonkey.mp4\";\r\nimport goldenGatherer from \"../../../assets/portalVideos/golden/Gatherer.mp4\";\r\nimport goldenHunter from \"../../../assets/portalVideos/golden/Hunter.mp4\";\r\nimport goldenFireBender from \"../../../assets/portalVideos/golden/FireBender.mp4\";\r\nimport goldenFarmer from \"../../../assets/portalVideos/golden/Farmer.mp4\";\r\nimport goldenGuardian from \"../../../assets/portalVideos/golden/Guardian.mp4\";\r\nimport goldenKing from \"../../../assets/portalVideos/golden/King.mp4\";\r\nimport goldenIntern from \"../../../assets/portalVideos/golden/Intern.mp4\";\r\nimport goldenCryptoInvestor from \"../../../assets/portalVideos/golden/CryptoInvestor.mp4\";\r\nimport goldenMetaMonkey from \"../../../assets/portalVideos/golden/MetaMonkey.mp4\";\r\nimport goldenCyborg from \"../../../assets/portalVideos/golden/Cyborg.mp4\";\r\n\r\nimport mysticalFarmer from \"../../../assets/portalVideos/mystical/Farmer.mp4\";\r\nimport mysticalGuardian from \"../../../assets/portalVideos/mystical/Guardian.mp4\";\r\nimport mysticalKing from \"../../../assets/portalVideos/mystical/King.mp4\";\r\nimport mysticalIntern from \"../../../assets/portalVideos/mystical/Intern.mp4\";\r\nimport mysticalCryptoInvestor from \"../../../assets/portalVideos/mystical/CryptoInvestor.mp4\";\r\nimport mysticalMetaMonkey from \"../../../assets/portalVideos/mystical/MetaMonkey.mp4\";\r\nimport mysticalCyborg from \"../../../assets/portalVideos/mystical/Cyborg.mp4\";\r\n\r\nconst getMonkeyVideo = (monkeyType, portalType) => {\r\n  let videoMapping = {\r\n    \"1\": {\r\n      \"1\": commonCaveMonkey,\r\n      \"2\": commonGatherer,\r\n      \"3\": commonHunter,\r\n      \"4\": commonFireBender,\r\n      \"5\": commonFarmer,\r\n      \"6\": commonGuardian,\r\n      \"7\": commonKing,\r\n      \"8\": commonIntern,\r\n      \"9\": commonCryptoInvestor,\r\n      \"10\": commonMetaMonkey,\r\n      \"11\": commonCyborg\r\n    },\r\n    \"2\": {\r\n      \"1\": goldenCaveMonkey,\r\n      \"2\": goldenGatherer,\r\n      \"3\": goldenHunter,\r\n      \"4\": goldenFireBender,\r\n      \"5\": goldenFarmer,\r\n      \"6\": goldenGuardian,\r\n      \"7\": goldenKing,\r\n      \"8\": goldenIntern,\r\n      \"9\": goldenCryptoInvestor,\r\n      \"10\": goldenMetaMonkey,\r\n      \"11\": goldenCyborg\r\n    },\r\n    \"3\": {\r\n      \"5\": mysticalFarmer,\r\n      \"6\": mysticalGuardian,\r\n      \"7\": mysticalKing,\r\n      \"8\": mysticalIntern,\r\n      \"9\": mysticalCryptoInvestor,\r\n      \"10\": mysticalMetaMonkey,\r\n      \"11\": mysticalCyborg\r\n    }\r\n  };\r\n  return videoMapping[portalType][monkeyType];\r\n};\r\n\r\nclass OpenPortalModal extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      backdrop: true,\r\n    };\r\n    this.toggle = this.toggle.bind(this);\r\n    this.vidRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.open && this.props.tokenObject !== \"approve\") {\r\n      this.vidRef.play();\r\n    }\r\n  }\r\n\r\n  toggle() {\r\n    this.props.closeModal()\r\n  }\r\n\r\n  render() {\r\n\r\n    let content;\r\n    if (this.props.tokenObject === \"approve\") {\r\n      content = (\r\n        <>\r\n          <Spinner type=\"grow\" color=\"warning\" />\r\n          Please wait while the blockchain processes your transaction...\r\n        </>\r\n      );\r\n    } else {\r\n      content = (\r\n        <video autoPlay muted playsInline width=\"100%\" height=\"100%\" >\r\n            <source src={getMonkeyVideo(this.props.tokenObject.nftData[0], this.props.tokenObject.nftData[4])} type=\"video/mp4\" />\r\n          Your browser does not support the video tag.\r\n        </video>\r\n      )\r\n    }\r\n\r\n    return (\r\n        <Modal isOpen={this.props.open} toggle={this.toggle} className={this.props.className} backdrop={this.state.backdrop}>\r\n          <ModalHeader style={{background: \"#561473\", color: \"white\", borderColor: \"#561473\"}}  toggle={this.toggle}>Portal Opening</ModalHeader>\r\n          <ModalBody style={{background: \"#6C32A6\", color: \"white\", margin: \"0\", padding: \"0\"}}>\r\n            {content}\r\n          </ModalBody>\r\n          <ModalFooter style={{background: \"#561473\", color: \"white\", borderColor: \"#561473\"}}>\r\n            <Button color=\"link\" onClick={this.toggle}>\r\n              Close\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default OpenPortalModal;","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  CardSubtitle,\r\n  CardImg,\r\n  Button,\r\n  Spinner\r\n} from \"reactstrap\";\r\n\r\nimport commonPortal from \"../../../assets/portals/common2.png\";\r\nimport goldenPortal from \"../../../assets/portals/golden2.png\";\r\nimport MysticalPortal from \"../../../assets/portals/mystical2.png\";\r\n\r\nimport metaMaskLogo from \"../../../assets/metaMask/MetaMask.png\";\r\nimport OpenPortalModal from \"./OpenPortalModal\";\r\n\r\nimport {mintCostCommon, mintCostGolden, mintCostMystical} from \"../../../ethereum/web3\"\r\n\r\nconst getMintCost = (rarity) => {\r\n  let mintMap = {\r\n    \"1\": mintCostCommon,\r\n    \"2\": mintCostGolden,\r\n    \"3\": mintCostMystical\r\n  };\r\n  return mintMap[rarity];\r\n}\r\n\r\nconst BuyBoxes = () => {\r\n\r\n    const [NFTList, setNFTList] = useState(\"load\");\r\n    const [openModal, setOpenModal] = useState(false);\r\n    const [tokenObject, setTokenObject] = useState(\"approve\");\r\n\r\n    const fetchData = async () => {\r\n      if (window.isUserWallet !== true) {\r\n        setNFTList(\"load\");\r\n        return \"\";\r\n      }\r\n      const walletHash = await window.web3Instance.eth.getAccounts();\r\n      const userBalance = await window.nftContract.methods.balanceOf(walletHash[0]).call();\r\n      let dataList = [];\r\n\r\n      for (let i of Array(parseInt(userBalance)).keys()) {\r\n        let nftIndex = await window.nftContract.methods.tokenOfOwnerByIndex(walletHash[0], i).call();\r\n        let nftData = await window.nftContract.methods.getNftData(nftIndex).call();\r\n        dataList.push({nftIndex, nftData});\r\n      }\r\n      setNFTList(dataList);\r\n    };\r\n\r\n    useEffect(() => {\r\n      if (NFTList === \"load\") {\r\n        fetchData();\r\n      }\r\n    });\r\n\r\n    const buyPortal = async (rarity) => {\r\n      const mintCost = getMintCost(rarity);\r\n      const walletHash = await window.web3Instance.eth.getAccounts();\r\n      await window.bnanaContract.methods.approve(window.nftContract.options.address, window.web3Instance.utils.toWei(mintCost, \"ether\")).send({from: walletHash[0]});\r\n      await window.nftContract.methods.mintNft(walletHash[0], rarity).send({from: walletHash[0]});\r\n      fetchData();\r\n    }\r\n\r\n    const openPortal = async (tokenObject) => {\r\n      setTokenObject(\"approve\");\r\n      setOpenModal(true);\r\n      const walletHash = await window.web3Instance.eth.getAccounts();\r\n      await window.nftContract.methods.openNftBox(tokenObject.nftIndex).send({from: walletHash[0]});\r\n      setTokenObject(tokenObject);\r\n      fetchData();\r\n    }\r\n\r\n    const callOpenPortal = (rarityType) => {\r\n      let tokenObject;\r\n      for (let item of NFTList) {\r\n        if (item.nftData[4] === rarityType ) {\r\n          tokenObject = item;\r\n        }\r\n      }\r\n      openPortal(tokenObject);\r\n    };\r\n\r\n    let internalContent;\r\n    if (window.isUserWallet !== true) {\r\n      internalContent = (\r\n        <Col xs=\"12\" md=\"12\" style={{display: \"flex\", justifyContent: \"center\"}}>\r\n            <Card className=\"mb-1 mt-2\" style={{width: \"80%\", background: \"#240940\", color: \"white\"}}>\r\n              <CardBody>\r\n                <CardTitle style={{color: \"white\"}}>\r\n                  <img src={metaMaskLogo} alt={\"\"} className='me-3' style={{width: \"50px\", height: \"auto\"}}/>\r\n                  Connect your wallet to see your NFT collection\r\n                </CardTitle>\r\n              </CardBody>\r\n            </Card>\r\n        </Col>\r\n      )\r\n    } else if (NFTList === \"load\") {\r\n      internalContent = (\r\n        <Col xs=\"12\" md=\"12\" style={{display: \"flex\", justifyContent: \"center\"}}>\r\n            <Card className=\"mb-1 mt-2\" style={{width: \"80%\", background: \"#240940\", color: \"white\"}}>\r\n              <CardBody>\r\n                <CardTitle style={{color: \"white\"}}>\r\n                  <Spinner type=\"grow\" color=\"warning\" /> \r\n                </CardTitle>\r\n                <CardSubtitle style={{color: \"white\"}}>Loading your portals, please wait</CardSubtitle>\r\n              </CardBody>\r\n            </Card>\r\n        </Col>\r\n      )\r\n    } else {\r\n      let commonCount = 0;\r\n      let goldenCount = 0;\r\n      let mysticalCount = 0;\r\n      for (const NFT of NFTList) {\r\n        if (NFT.nftData[3]) {\r\n          continue;\r\n        }\r\n        if (NFT.nftData[4] === \"1\") {\r\n          commonCount += 1;\r\n        } else if (NFT.nftData[4] === \"2\") {\r\n          goldenCount += 1;\r\n        } else if (NFT.nftData[4] === \"3\") {\r\n          mysticalCount += 1;\r\n        }\r\n      }\r\n      internalContent = (\r\n        <>\r\n          <Col xs=\"12\" md=\"4\" style={{display: \"flex\", justifyContent: \"center\"}}>\r\n              <Card className=\"mb-1 mt-2\" style={{width: \"80%\", background: \"#240940\", color: \"white\"}}>\r\n                <span className=\"position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger\" style={{\"font-size\": \"1.25rem\"}}>\r\n                  {commonCount}\r\n                  <span className=\"visually-hidden\">common portals</span>\r\n                </span>\r\n                <CardImg top width=\"80%\" src={commonPortal} alt=\"Common Portal\" />\r\n                <CardBody>\r\n                  <CardTitle style={{color: \"white\"}}>Common Portal</CardTitle>\r\n                  <CardSubtitle>$BNANA {mintCostCommon}</CardSubtitle>\r\n                  <Button disabled={commonCount === 0} onClick={() => callOpenPortal(\"1\")} color=\"primary\" className=\"me-2\">Open portal</Button>\r\n                  <Button onClick={() => buyPortal(\"1\")} color=\"primary\">Buy portal</Button>\r\n                </CardBody>\r\n              </Card>\r\n          </Col>\r\n          <Col xs=\"12\" md=\"4\" style={{display: \"flex\", justifyContent: \"center\"}}>\r\n              <Card className=\"mb-1 mt-2\" style={{width: \"80%\", background: \"#240940\", color: \"white\"}}>\r\n                <span className=\"position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger\" style={{\"font-size\": \"1.25rem\"}}>\r\n                  {goldenCount}\r\n                  <span className=\"visually-hidden\">golden portals</span>\r\n                </span>\r\n                <CardImg top width=\"80%\" src={goldenPortal} alt=\"Common Portal\" />\r\n                <CardBody>\r\n                  <CardTitle style={{color: \"white\"}} >Golden Portal</CardTitle>\r\n                  <CardSubtitle>$BNANA {mintCostGolden}</CardSubtitle>\r\n                  <Button disabled={goldenCount === 0} onClick={() => callOpenPortal(\"2\")} color=\"primary\" className=\"me-2\">Open portal</Button>\r\n                  <Button onClick={() => buyPortal(\"2\")} color=\"primary\">Buy portal</Button>\r\n                </CardBody>\r\n              </Card>\r\n          </Col>\r\n          <Col xs=\"12\" md=\"4\" style={{display: \"flex\", justifyContent: \"center\"}}>\r\n              <Card className=\"mb-1 mt-2\" style={{width: \"80%\", background: \"#240940\", color: \"white\"}}>\r\n                <span className=\"position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger\" style={{\"font-size\": \"1.25rem\"}}>\r\n                  {mysticalCount}\r\n                  <span className=\"visually-hidden\">mystical portals</span>\r\n                </span>\r\n                <CardImg top width=\"80%\" src={MysticalPortal} alt=\"Common Portal\" />\r\n                <CardBody>\r\n                  <CardTitle style={{color: \"white\"}}>Mystical Portal</CardTitle>\r\n                  <CardSubtitle>$BNANA {mintCostMystical}</CardSubtitle>\r\n                  <Button disabled={mysticalCount === 0} onClick={() => callOpenPortal(\"3\")} color=\"primary\" className=\"me-2\">Open portal</Button>\r\n                  <Button onClick={() => buyPortal(\"3\")} color=\"primary\">Buy portal</Button>\r\n                </CardBody>\r\n              </Card>\r\n          </Col>\r\n        </>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <TransitionGroup style={{width: \"100%\", display: \"flex\", justifyContent: \"center\"}}>\r\n          <CSSTransition component=\"div\" classNames=\"TabsAnimation\" appear={true}\r\n            timeout={1500} enter={false} exit={false}>\r\n            <Row noGutters className=\"text-center\" style={{width: \"90%\"}}>\r\n              <Col md=\"12\">\r\n                <Card className=\"main-card mb-3 mt-3\" style={{background: \"#561473\"}}>\r\n                  <CardBody>\r\n                    <CardTitle style={{color: \"white\"}}>Open your portals</CardTitle>\r\n                    <div className=\"divider\" />\r\n                    <Row noGutters className=\"text-center mt-3\">\r\n                        {internalContent}\r\n                    </Row>\r\n                  </CardBody>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </CSSTransition>\r\n        </TransitionGroup>\r\n        <OpenPortalModal closeModal={() => setOpenModal(false)} open={openModal} tokenObject={tokenObject} />\r\n      </Fragment>\r\n    );\r\n}\r\n\r\nexport default BuyBoxes;\r\n","import React, { useState } from \"react\";\r\n\r\n// Layout\r\nimport AppHeader from \"../../Layout/AppHeader\";\r\nimport AppSidebar from \"../../Layout/AppSidebar\";\r\n\r\n// Internal components\r\nimport BuyBoxes from \"./Components/BuyBoxes\";\r\n\r\nfunction useForceUpdate(){\r\n  const [value, setValue] = useState(0); // integer state\r\n  return () => setValue(value => value + 1); // update the state to force render\r\n}\r\n\r\nconst Portals = ({ match }) => {\r\n\r\n  const forceUpdate = useForceUpdate();\r\n\r\n  return (\r\n    <>\r\n      <AppHeader forceUpdate={() => forceUpdate()}/>\r\n      <div className=\"app-main\">\r\n        <AppSidebar />\r\n        <div className=\"app-main__outer\">\r\n          <div className=\"app-main__inner p-0\">\r\n            <BuyBoxes/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n};\r\n\r\nexport default Portals;\r\n"],"names":["OpenPortalModal","props","state","backdrop","toggle","bind","vidRef","React","this","open","tokenObject","play","closeModal","content","monkeyType","portalType","type","color","autoPlay","muted","playsInline","width","height","src","nftData","commonCaveMonkey","commonGatherer","commonHunter","commonFireBender","commonFarmer","commonGuardian","commonKing","commonIntern","commonCryptoInvestor","commonMetaMonkey","commonCyborg","goldenCaveMonkey","goldenGatherer","goldenHunter","goldenFireBender","goldenFarmer","goldenGuardian","goldenKing","goldenIntern","goldenCryptoInvestor","goldenMetaMonkey","goldenCyborg","mysticalFarmer","mysticalGuardian","mysticalKing","mysticalIntern","mysticalCryptoInvestor","mysticalMetaMonkey","mysticalCyborg","isOpen","className","style","background","borderColor","margin","padding","onClick","getMintCost","rarity","mintCostCommon","mintCostGolden","mintCostMystical","useState","NFTList","setNFTList","openModal","setOpenModal","setTokenObject","fetchData","window","isUserWallet","web3Instance","eth","getAccounts","walletHash","nftContract","methods","balanceOf","call","userBalance","dataList","Array","parseInt","keys","i","tokenOfOwnerByIndex","nftIndex","getNftData","push","useEffect","internalContent","buyPortal","mintCost","bnanaContract","approve","options","address","utils","toWei","send","from","mintNft","openPortal","openNftBox","callOpenPortal","rarityType","item","xs","md","display","justifyContent","metaMaskLogo","alt","commonCount","goldenCount","mysticalCount","NFT","top","commonPortal","disabled","goldenPortal","MysticalPortal","Fragment","TransitionGroup","CSSTransition","component","classNames","appear","timeout","enter","exit","noGutters","match","forceUpdate","setValue","value","useForceUpdate","AppHeader","AppSidebar"],"sourceRoot":""}