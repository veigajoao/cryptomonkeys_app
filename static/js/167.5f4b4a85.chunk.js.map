{"version":3,"file":"static/js/167.5f4b4a85.chunk.js","mappings":"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","sources":["AppPages/Withdraw/Components/Withdraw.js","AppPages/Withdraw/Components/OpenPortalModal.js","AppPages/Withdraw/index.js"],"sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  CardSubtitle,\r\n  CardImg,\r\n  Button,\r\n  Spinner,\r\n  Table\r\n} from \"reactstrap\";\r\n\r\nimport commonPortal from \"../../../assets/portals/common2.png\";\r\nimport goldenPortal from \"../../../assets/portals/golden2.png\";\r\nimport MysticalPortal from \"../../../assets/portals/mystical2.png\";\r\n\r\nimport metaMaskLogo from \"../../../assets/metaMask/MetaMask.png\";\r\nimport OpenPortalModal from \"./OpenPortalModal\";\r\n\r\nimport {mintCostCommon, mintCostGolden, mintCostMystical} from \"../../../ethereum/web3\"\r\n\r\nconst getMintCost = (rarity) => {\r\n  let mintMap = {\r\n    \"1\": mintCostCommon,\r\n    \"2\": mintCostGolden,\r\n    \"3\": mintCostMystical\r\n  };\r\n  return mintMap[rarity];\r\n}\r\n\r\nconst BuyBoxes = () => {\r\n\r\n    const [lastWithdraw, setLastWithdraw] = useState(0);\r\n    const [withdrawTime, setWithdrawTime] = useState(0);\r\n    const [userBalance, setUserBalance] = useState(0);\r\n    const [blockchainNow, setBlockchainNow] = useState(0);\r\n    const [needFetch, setNeedFetch] = useState(\"true\");\r\n    const [openModal, setOpenModal] = useState(true);\r\n\r\n    const fetchBalance = async () => {\r\n        if (window.isUserWallet) {\r\n            setNeedFetch(\"load\");\r\n            const walletHash = await window.web3Instance.eth.getAccounts();\r\n            const withdrawTiming = await window.gameContractOld.methods.withdrawalTime().call();\r\n            const lastUserWithdraw = await window.gameContractOld.methods.lastWithdrawal(walletHash[0]).call();\r\n            const LockedBalance = await window.gameContractOld.methods.userBalance(walletHash[0]).call();\r\n            const now = await window.gameContractOld.methods.getNow().call();\r\n            setBlockchainNow(now);\r\n            setUserBalance(window.web3Instance.utils.fromWei(LockedBalance, \"ether\"));\r\n            setLastWithdraw(lastUserWithdraw);\r\n            setWithdrawTime(withdrawTiming);\r\n            setNeedFetch(\"false\");\r\n          } else {\r\n          setNeedFetch(\"true\");\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n      if (needFetch === \"true\") {\r\n        fetchBalance();\r\n      }\r\n    });\r\n\r\n    const withdrawBalance = async () => {\r\n      const walletHash = await window.web3Instance.eth.getAccounts();\r\n      await window.gameContractOld.methods.withdrawalUserBalance().send({from: walletHash[0]});\r\n      fetchBalance();\r\n    }\r\n\r\n    let internalContent;\r\n    if (window.isUserWallet !== true) {\r\n      internalContent = (\r\n        <Row noGutters className=\"text-center mt-3\">\r\n          <Col xs=\"12\" md=\"12\" style={{display: \"flex\", justifyContent: \"center\"}}>\r\n              <Card className=\"mb-1 mt-2\" style={{width: \"80%\", background: \"#240940\", color: \"white\"}}>\r\n                <CardBody>\r\n                  <CardTitle style={{color: \"white\"}}>\r\n                    <img src={metaMaskLogo} alt={\"\"} className='me-3' style={{width: \"50px\", height: \"auto\"}}/>\r\n                    Connect your wallet to see your locked balance\r\n                  </CardTitle>\r\n                </CardBody>\r\n              </Card>\r\n          </Col>\r\n        </Row>\r\n      )\r\n    } else if (needFetch === \"load\") {\r\n      internalContent = (\r\n        <Row noGutters className=\"text-center mt-3\">\r\n          <Col xs=\"12\" md=\"12\" style={{display: \"flex\", justifyContent: \"center\"}}>\r\n              <Card className=\"mb-1 mt-2\" style={{width: \"80%\", background: \"#240940\", color: \"white\"}}>\r\n                <CardBody>\r\n                  <CardTitle style={{color: \"white\"}}>\r\n                    <Spinner type=\"grow\" color=\"warning\" /> \r\n                  </CardTitle>\r\n                  <CardSubtitle style={{color: \"white\"}}>Loading your balance, please wait</CardSubtitle>\r\n                </CardBody>\r\n              </Card>\r\n          </Col>\r\n        </Row>\r\n      )\r\n    } else {\r\n\r\n      let timeToNext = parseInt(lastWithdraw) + parseInt(withdrawTime) - parseInt(blockchainNow);\r\n      let days = Math.floor(timeToNext / 86400);\r\n      let hours = Math.floor((timeToNext % 86400) / 3600) ;\r\n      let minutes = Math.floor(((timeToNext % 86400) % 3600) / 60);\r\n\r\n      // let percentageDone = ((parseInt(withdrawTime) - timeToNext) / parseInt(withdrawTime)) * 0.7;\r\n      let percentageDone = ((parseInt(withdrawTime) - timeToNext) / parseInt(withdrawTime));\r\n      let nowWithdraw = Math.round((percentageDone * parseInt(userBalance) * 0.7 + parseInt(userBalance) * 0.3)*100) / 100;\r\n      internalContent = (\r\n        <>\r\n          <Row noGutters className=\"text-center mt-3\">\r\n            <p style={{color: \"white\"}}>\r\n              You can withdraw your entire game balance every 14 days. If you choose to withdraw earlier, you'll\r\n              lose part of your balance as a penalty.\r\n            </p>\r\n            <Table style={{color: \"white\"}}>\r\n              <tbody>\r\n                <tr>\r\n                  <td>Locked Balance</td>\r\n                  <td>{userBalance}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Time to next 100% withdraw</td>\r\n                  <td>{days} Days, {hours} Hours and {minutes} Minutes</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>If you withdraw now you get</td>\r\n                  <td>{nowWithdraw}</td>\r\n                </tr>\r\n              </tbody>\r\n            </Table>\r\n          </Row>\r\n          <Button onClick={() => withdrawBalance()} color=\"primary\">Withdraw balance</Button>\r\n        </>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <TransitionGroup style={{width: \"100%\", display: \"flex\", justifyContent: \"center\"}}>\r\n          <CSSTransition component=\"div\" classNames=\"TabsAnimation\" appear={true}\r\n            timeout={1500} enter={false} exit={false}>\r\n            <Row noGutters className=\"text-center\" style={{width: \"90%\"}}>\r\n              <Col md=\"12\">\r\n                <Card className=\"main-card mb-3 mt-3\" style={{background: \"#561473\"}}>\r\n                  <CardBody>\r\n                    <CardTitle style={{color: \"white\"}}>Withdrawal your $BNANAS</CardTitle>\r\n                    <div className=\"divider\" />\r\n                    {internalContent}\r\n                  </CardBody>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </CSSTransition>\r\n        </TransitionGroup>\r\n        {/* <OpenPortalModal closeModal={() => setOpenModal(false)} open={openModal} /> */}\r\n      </Fragment>\r\n    );\r\n}\r\n\r\nexport default BuyBoxes;\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Spinner\r\n} from \"reactstrap\";\r\n\r\n//import all videos + mapping function\r\nimport commonCaveMonkey from \"../../../assets/portalVideos/common/CaveMonkey.mp4\";\r\nimport commonGatherer from \"../../../assets/portalVideos/common/Gatherer.mp4\";\r\nimport commonHunter from \"../../../assets/portalVideos/common/Hunter.mp4\";\r\nimport commonFireBender from \"../../../assets/portalVideos/common/FireBender.mp4\";\r\nimport commonFarmer from \"../../../assets/portalVideos/common/Farmer.mp4\";\r\nimport commonGuardian from \"../../../assets/portalVideos/common/Guardian.mp4\";\r\nimport commonKing from \"../../../assets/portalVideos/common/King.mp4\";\r\nimport commonIntern from \"../../../assets/portalVideos/common/Intern.mp4\";\r\nimport commonCryptoInvestor from \"../../../assets/portalVideos/common/CryptoInvestor.mp4\";\r\nimport commonMetaMonkey from \"../../../assets/portalVideos/common/MetaMonkey.mp4\";\r\nimport commonCyborg from \"../../../assets/portalVideos/common/Cyborg.mp4\";\r\n\r\nimport goldenCaveMonkey from \"../../../assets/portalVideos/golden/CaveMonkey.mp4\";\r\nimport goldenGatherer from \"../../../assets/portalVideos/golden/Gatherer.mp4\";\r\nimport goldenHunter from \"../../../assets/portalVideos/golden/Hunter.mp4\";\r\nimport goldenFireBender from \"../../../assets/portalVideos/golden/FireBender.mp4\";\r\nimport goldenFarmer from \"../../../assets/portalVideos/golden/Farmer.mp4\";\r\nimport goldenGuardian from \"../../../assets/portalVideos/golden/Guardian.mp4\";\r\nimport goldenKing from \"../../../assets/portalVideos/golden/King.mp4\";\r\nimport goldenIntern from \"../../../assets/portalVideos/golden/Intern.mp4\";\r\nimport goldenCryptoInvestor from \"../../../assets/portalVideos/golden/CryptoInvestor.mp4\";\r\nimport goldenMetaMonkey from \"../../../assets/portalVideos/golden/MetaMonkey.mp4\";\r\nimport goldenCyborg from \"../../../assets/portalVideos/golden/Cyborg.mp4\";\r\n\r\nimport mysticalFarmer from \"../../../assets/portalVideos/mystical/Farmer.mp4\";\r\nimport mysticalGuardian from \"../../../assets/portalVideos/mystical/Guardian.mp4\";\r\nimport mysticalKing from \"../../../assets/portalVideos/mystical/King.mp4\";\r\nimport mysticalIntern from \"../../../assets/portalVideos/mystical/Intern.mp4\";\r\nimport mysticalCryptoInvestor from \"../../../assets/portalVideos/mystical/CryptoInvestor.mp4\";\r\nimport mysticalMetaMonkey from \"../../../assets/portalVideos/mystical/MetaMonkey.mp4\";\r\nimport mysticalCyborg from \"../../../assets/portalVideos/mystical/Cyborg.mp4\";\r\n\r\nconst getMonkeyVideo = (monkeyType, portalType) => {\r\n  let videoMapping = {\r\n    \"1\": {\r\n      \"1\": commonCaveMonkey,\r\n      \"2\": commonGatherer,\r\n      \"3\": commonHunter,\r\n      \"4\": commonFireBender,\r\n      \"5\": commonFarmer,\r\n      \"6\": commonGuardian,\r\n      \"7\": commonKing,\r\n      \"8\": commonIntern,\r\n      \"9\": commonCryptoInvestor,\r\n      \"10\": commonMetaMonkey,\r\n      \"11\": commonCyborg\r\n    },\r\n    \"2\": {\r\n      \"1\": goldenCaveMonkey,\r\n      \"2\": goldenGatherer,\r\n      \"3\": goldenHunter,\r\n      \"4\": goldenFireBender,\r\n      \"5\": goldenFarmer,\r\n      \"6\": goldenGuardian,\r\n      \"7\": goldenKing,\r\n      \"8\": goldenIntern,\r\n      \"9\": goldenCryptoInvestor,\r\n      \"10\": goldenMetaMonkey,\r\n      \"11\": goldenCyborg\r\n    },\r\n    \"3\": {\r\n      \"5\": mysticalFarmer,\r\n      \"6\": mysticalGuardian,\r\n      \"7\": mysticalKing,\r\n      \"8\": mysticalIntern,\r\n      \"9\": mysticalCryptoInvestor,\r\n      \"10\": mysticalMetaMonkey,\r\n      \"11\": mysticalCyborg\r\n    }\r\n  };\r\n  return videoMapping[portalType][monkeyType];\r\n};\r\n\r\nclass OpenPortalModal extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      backdrop: true,\r\n    };\r\n    this.toggle = this.toggle.bind(this);\r\n    this.vidRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.open && this.props.tokenObject !== \"approve\") {\r\n      this.vidRef.play();\r\n    }\r\n  }\r\n\r\n  toggle() {\r\n    this.props.closeModal()\r\n  }\r\n\r\n  render() {\r\n\r\n    let content;\r\n    if (this.props.tokenObject === \"approve\") {\r\n      content = (\r\n        <>\r\n          <Spinner type=\"grow\" color=\"warning\" />\r\n          Please wait while the blockchain processes your transaction...\r\n        </>\r\n      );\r\n    } else {\r\n      content = (\r\n        <video autoPlay muted playsInline width=\"100%\" height=\"100%\" >\r\n            <source src={getMonkeyVideo(this.props.tokenObject.nftData[0], this.props.tokenObject.nftData[4])} type=\"video/mp4\" />\r\n          Your browser does not support the video tag.\r\n        </video>\r\n      )\r\n    }\r\n\r\n    return (\r\n        <Modal isOpen={this.props.open} toggle={this.toggle} className={this.props.className} backdrop={this.state.backdrop}>\r\n          <ModalHeader style={{background: \"#561473\", color: \"white\", borderColor: \"#561473\"}}  toggle={this.toggle}>Portal Opening</ModalHeader>\r\n          <ModalBody style={{background: \"#6C32A6\", color: \"white\", margin: \"0\", padding: \"0\"}}>\r\n            {content}\r\n          </ModalBody>\r\n          <ModalFooter style={{background: \"#561473\", color: \"white\", borderColor: \"#561473\"}}>\r\n            <Button color=\"link\" onClick={this.toggle}>\r\n              Close\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default OpenPortalModal;","import React, { useState } from \"react\";\r\n\r\n// Layout\r\nimport AppHeader from \"../../Layout/AppHeader\";\r\nimport AppSidebar from \"../../Layout/AppSidebar\";\r\n\r\n// Internal components\r\nimport Withdraw from \"./Components/Withdraw\";\r\n\r\nfunction useForceUpdate(){\r\n  const [value, setValue] = useState(0); // integer state\r\n  return () => setValue(value => value + 1); // update the state to force render\r\n}\r\n\r\nconst Portals = ({ match }) => {\r\n\r\n  const forceUpdate = useForceUpdate();\r\n\r\n  return (\r\n    <>\r\n      <AppHeader forceUpdate={() => forceUpdate()}/>\r\n      <div className=\"app-main\">\r\n        <AppSidebar />\r\n        <div className=\"app-main__outer\">\r\n          <div className=\"app-main__inner p-0\">\r\n            <Withdraw/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n};\r\n\r\nexport default Portals;\r\n"],"names":["React","useState","lastWithdraw","setLastWithdraw","withdrawTime","setWithdrawTime","userBalance","setUserBalance","blockchainNow","setBlockchainNow","needFetch","setNeedFetch","fetchBalance","window","isUserWallet","web3Instance","eth","getAccounts","walletHash","gameContractOld","methods","withdrawalTime","call","withdrawTiming","lastWithdrawal","lastUserWithdraw","LockedBalance","getNow","now","utils","fromWei","useEffect","internalContent","withdrawBalance","withdrawalUserBalance","send","from","noGutters","className","xs","md","style","display","justifyContent","width","background","color","src","metaMaskLogo","alt","height","type","timeToNext","parseInt","days","Math","floor","hours","minutes","percentageDone","nowWithdraw","round","onClick","Fragment","TransitionGroup","CSSTransition","component","classNames","appear","timeout","enter","exit","match","forceUpdate","setValue","value","useForceUpdate","AppHeader","AppSidebar","Withdraw"],"sourceRoot":""}